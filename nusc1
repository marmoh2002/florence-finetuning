{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3d4055d6",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-12-03T20:12:00.373475Z",
     "iopub.status.busy": "2024-12-03T20:12:00.373127Z",
     "iopub.status.idle": "2024-12-03T20:12:01.046009Z",
     "shell.execute_reply": "2024-12-03T20:12:01.045111Z"
    },
    "papermill": {
     "duration": 0.683034,
     "end_time": "2024-12-03T20:12:01.048043",
     "exception": false,
     "start_time": "2024-12-03T20:12:00.365009",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1839c5ee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:12:01.062984Z",
     "iopub.status.busy": "2024-12-03T20:12:01.062316Z",
     "iopub.status.idle": "2024-12-03T20:12:10.431051Z",
     "shell.execute_reply": "2024-12-03T20:12:10.430225Z"
    },
    "papermill": {
     "duration": 9.377546,
     "end_time": "2024-12-03T20:12:10.433159",
     "exception": false,
     "start_time": "2024-12-03T20:12:01.055613",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting einops\r\n",
      "  Downloading einops-0.8.0-py3-none-any.whl.metadata (12 kB)\r\n",
      "Downloading einops-0.8.0-py3-none-any.whl (43 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.2/43.2 kB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: einops\r\n",
      "Successfully installed einops-0.8.0\r\n"
     ]
    }
   ],
   "source": [
    "!pip install einops"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4bfed47c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:12:10.447339Z",
     "iopub.status.busy": "2024-12-03T20:12:10.446740Z",
     "iopub.status.idle": "2024-12-03T20:12:34.529747Z",
     "shell.execute_reply": "2024-12-03T20:12:34.528829Z"
    },
    "papermill": {
     "duration": 24.092286,
     "end_time": "2024-12-03T20:12:34.531912",
     "exception": false,
     "start_time": "2024-12-03T20:12:10.439626",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting matplotlib==3.5.3\r\n",
      "  Downloading matplotlib-3.5.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.7 kB)\r\n",
      "Collecting nuscenes-devkit==1.1.11\r\n",
      "  Downloading nuscenes_devkit-1.1.11-py3-none-any.whl.metadata (15 kB)\r\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (0.12.1)\r\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (4.53.0)\r\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (1.4.5)\r\n",
      "Requirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (1.26.4)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (21.3)\r\n",
      "Requirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (10.3.0)\r\n",
      "Requirement already satisfied: pyparsing>=2.2.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (3.1.2)\r\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib==3.5.3) (2.9.0.post0)\r\n",
      "Requirement already satisfied: cachetools in /opt/conda/lib/python3.10/site-packages (from nuscenes-devkit==1.1.11) (4.2.4)\r\n",
      "Collecting descartes (from nuscenes-devkit==1.1.11)\r\n",
      "  Downloading descartes-1.1.0-py3-none-any.whl.metadata (2.4 kB)\r\n",
      "Collecting fire (from nuscenes-devkit==1.1.11)\r\n",
      "  Downloading fire-0.7.0.tar.gz (87 kB)\r\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m87.2/87.2 kB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l-\b \b\\\b \bdone\r\n",
      "\u001b[?25hRequirement already satisfied: opencv-python>=4.5.4.58 in /opt/conda/lib/python3.10/site-packages (from nuscenes-devkit==1.1.11) (4.10.0.84)\r\n",
      "Collecting pyquaternion>=0.9.5 (from nuscenes-devkit==1.1.11)\r\n",
      "  Downloading pyquaternion-0.9.9-py3-none-any.whl.metadata (1.4 kB)\r\n",
      "Requirement already satisfied: scikit-learn in /opt/conda/lib/python3.10/site-packages (from nuscenes-devkit==1.1.11) (1.2.2)\r\n",
      "Requirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from nuscenes-devkit==1.1.11) (1.14.1)\r\n",
      "Requirement already satisfied: Shapely<2.0.0 in /opt/conda/lib/python3.10/site-packages (from nuscenes-devkit==1.1.11) (1.8.5.post1)\r\n",
      "Requirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (from nuscenes-devkit==1.1.11) (4.66.4)\r\n",
      "Collecting pycocotools>=2.0.1 (from nuscenes-devkit==1.1.11)\r\n",
      "  Downloading pycocotools-2.0.8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.1 kB)\r\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib==3.5.3) (1.16.0)\r\n",
      "Requirement already satisfied: termcolor in /opt/conda/lib/python3.10/site-packages (from fire->nuscenes-devkit==1.1.11) (2.4.0)\r\n",
      "Requirement already satisfied: joblib>=1.1.1 in /opt/conda/lib/python3.10/site-packages (from scikit-learn->nuscenes-devkit==1.1.11) (1.4.2)\r\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from scikit-learn->nuscenes-devkit==1.1.11) (3.5.0)\r\n",
      "Downloading matplotlib-3.5.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m11.9/11.9 MB\u001b[0m \u001b[31m110.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading nuscenes_devkit-1.1.11-py3-none-any.whl (313 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m313.1/313.1 kB\u001b[0m \u001b[31m22.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading pycocotools-2.0.8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m427.8/427.8 kB\u001b[0m \u001b[31m27.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading pyquaternion-0.9.9-py3-none-any.whl (14 kB)\r\n",
      "Downloading descartes-1.1.0-py3-none-any.whl (5.8 kB)\r\n",
      "Building wheels for collected packages: fire\r\n",
      "  Building wheel for fire (setup.py) ... \u001b[?25l-\b \b\\\b \b|\b \bdone\r\n",
      "\u001b[?25h  Created wheel for fire: filename=fire-0.7.0-py3-none-any.whl size=114248 sha256=5780237e88023425ea7d68a88442c408c9a56fa8d529029f68ab246db22bf1b6\r\n",
      "  Stored in directory: /root/.cache/pip/wheels/19/39/2f/2d3cadc408a8804103f1c34ddd4b9f6a93497b11fa96fe738e\r\n",
      "Successfully built fire\r\n",
      "Installing collected packages: pyquaternion, fire, matplotlib, pycocotools, descartes, nuscenes-devkit\r\n",
      "  Attempting uninstall: matplotlib\r\n",
      "    Found existing installation: matplotlib 3.7.5\r\n",
      "    Uninstalling matplotlib-3.7.5:\r\n",
      "      Successfully uninstalled matplotlib-3.7.5\r\n",
      "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\r\n",
      "cartopy 0.24.0 requires matplotlib>=3.6, but you have matplotlib 3.5.3 which is incompatible.\r\n",
      "beatrix-jupyterlab 2024.66.154055 requires jupyterlab~=3.6.0, but you have jupyterlab 4.3.1 which is incompatible.\r\n",
      "mlxtend 0.23.3 requires scikit-learn>=1.3.1, but you have scikit-learn 1.2.2 which is incompatible.\r\n",
      "mne 1.8.0 requires matplotlib>=3.6, but you have matplotlib 3.5.3 which is incompatible.\r\n",
      "plotnine 0.14.3 requires matplotlib>=3.8.0, but you have matplotlib 3.5.3 which is incompatible.\r\n",
      "ydata-profiling 4.12.0 requires scipy<1.14,>=1.4.1, but you have scipy 1.14.1 which is incompatible.\u001b[0m\u001b[31m\r\n",
      "\u001b[0mSuccessfully installed descartes-1.1.0 fire-0.7.0 matplotlib-3.5.3 nuscenes-devkit-1.1.11 pycocotools-2.0.8 pyquaternion-0.9.9\r\n"
     ]
    }
   ],
   "source": [
    "!pip install matplotlib==3.5.3 nuscenes-devkit==1.1.11"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b14f7fac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:12:34.549424Z",
     "iopub.status.busy": "2024-12-03T20:12:34.548544Z",
     "iopub.status.idle": "2024-12-03T20:17:24.856366Z",
     "shell.execute_reply": "2024-12-03T20:17:24.855283Z"
    },
    "papermill": {
     "duration": 290.319209,
     "end_time": "2024-12-03T20:17:24.859063",
     "exception": false,
     "start_time": "2024-12-03T20:12:34.539854",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--2024-12-03 20:12:36--  https://www.nuscenes.org/data/v1.0-mini.tgz\r\n",
      "Resolving www.nuscenes.org (www.nuscenes.org)... 108.158.20.125, 108.158.20.46, 108.158.20.100, ...\r\n",
      "Connecting to www.nuscenes.org (www.nuscenes.org)|108.158.20.125|:443... connected.\r\n",
      "HTTP request sent, awaiting response... 200 OK\r\n",
      "Length: 4167696325 (3.9G) [application/x-tar]\r\n",
      "Saving to: 'v1.0-mini.tgz'\r\n",
      "\r\n",
      "v1.0-mini.tgz       100%[===================>]   3.88G  17.8MB/s    in 3m 55s  \r\n",
      "\r\n",
      "2024-12-03 20:16:32 (16.9 MB/s) - 'v1.0-mini.tgz' saved [4167696325/4167696325]\r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    " !mkdir -p /data/sets/nuscenes  # Make the directory to store the nuScenes dataset in.\n",
    "\n",
    " !wget https://www.nuscenes.org/data/v1.0-mini.tgz  # Download the nuScenes mini split.\n",
    "\n",
    " !tar -xf v1.0-mini.tgz -C /data/sets/nuscenes  # Uncompress the nuScenes mini split.\n",
    "\n",
    " !pip install nuscenes-devkit &> /dev/null  # Install nuScenes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "323503c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:17:24.968661Z",
     "iopub.status.busy": "2024-12-03T20:17:24.968326Z",
     "iopub.status.idle": "2024-12-03T20:18:43.166695Z",
     "shell.execute_reply": "2024-12-03T20:18:43.165741Z"
    },
    "papermill": {
     "duration": 78.254395,
     "end_time": "2024-12-03T20:18:43.168750",
     "exception": false,
     "start_time": "2024-12-03T20:17:24.914355",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "30e9acd9567c4c02b4c114e75dae8813",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/2.44k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7c9270d137184555a5717fe504c77b0c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "configuration_florence2.py:   0%|          | 0.00/15.1k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "A new version of the following files was downloaded from https://huggingface.co/microsoft/Florence-2-large:\n",
      "- configuration_florence2.py\n",
      ". Make sure to double-check they do not contain any added malicious code. To avoid downloading new versions of the code file, you can pin a revision.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a78ad883d03540c2a54acdb1a20337ee",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "modeling_florence2.py:   0%|          | 0.00/127k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "A new version of the following files was downloaded from https://huggingface.co/microsoft/Florence-2-large:\n",
      "- modeling_florence2.py\n",
      ". Make sure to double-check they do not contain any added malicious code. To avoid downloading new versions of the code file, you can pin a revision.\n",
      "/opt/conda/lib/python3.10/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers\n",
      "  warnings.warn(f\"Importing from {__name__} is deprecated, please import via timm.layers\", FutureWarning)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3b442327df0144d08fdf70ec32e2e369",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "pytorch_model.bin:   0%|          | 0.00/1.54G [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5e6ac78c41754e0b9928de54959c5e40",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "generation_config.json:   0%|          | 0.00/51.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ab762c876b5a41e784255bce1a74d251",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "preprocessor_config.json:   0%|          | 0.00/806 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b37a77d457734e8b9ba6846ba0a3c542",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "processing_florence2.py:   0%|          | 0.00/48.7k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "A new version of the following files was downloaded from https://huggingface.co/microsoft/Florence-2-large:\n",
      "- processing_florence2.py\n",
      ". Make sure to double-check they do not contain any added malicious code. To avoid downloading new versions of the code file, you can pin a revision.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "80e7694a99f2485ea7f3b5b871ead313",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/34.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e1f5fac6d97c41a8b5b628be7de04429",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.json:   0%|          | 0.00/1.10M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b2869aff492949ef82250799418fb89a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import torch\n",
    "import requests\n",
    "from PIL import Image\n",
    "from transformers import AutoProcessor, AutoModelForCausalLM\n",
    "device = \"cuda:0\" if torch.cuda.is_available() else \"cpu\"\n",
    "torch_dtype = torch.float16 if torch.cuda.is_available() else torch.float32\n",
    "\n",
    "model = AutoModelForCausalLM.from_pretrained(\"microsoft/Florence-2-large\", torch_dtype=torch_dtype, trust_remote_code=True).to(device)\n",
    "processor = AutoProcessor.from_pretrained(\"microsoft/Florence-2-large\", trust_remote_code=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c9e7e7e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:43.286537Z",
     "iopub.status.busy": "2024-12-03T20:18:43.285298Z",
     "iopub.status.idle": "2024-12-03T20:18:44.818923Z",
     "shell.execute_reply": "2024-12-03T20:18:44.817819Z"
    },
    "papermill": {
     "duration": 1.593745,
     "end_time": "2024-12-03T20:18:44.820884",
     "exception": false,
     "start_time": "2024-12-03T20:18:43.227139",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "======\n",
      "Loading NuScenes tables for version v1.0-mini...\n",
      "23 category,\n",
      "8 attribute,\n",
      "4 visibility,\n",
      "911 instance,\n",
      "12 sensor,\n",
      "120 calibrated_sensor,\n",
      "31206 ego_pose,\n",
      "8 log,\n",
      "10 scene,\n",
      "404 sample,\n",
      "31206 sample_data,\n",
      "18538 sample_annotation,\n",
      "4 map,\n",
      "Done loading in 0.713 seconds.\n",
      "======\n",
      "Reverse indexing ...\n",
      "Done reverse indexing in 0.1 seconds.\n",
      "======\n"
     ]
    }
   ],
   "source": [
    "from nuscenes.nuscenes import NuScenes\n",
    "nusc = NuScenes(version='v1.0-mini', dataroot='/data/sets/nuscenes', verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d0a47d6f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:44.971855Z",
     "iopub.status.busy": "2024-12-03T20:18:44.970674Z",
     "iopub.status.idle": "2024-12-03T20:18:44.976251Z",
     "shell.execute_reply": "2024-12-03T20:18:44.975341Z"
    },
    "papermill": {
     "duration": 0.062548,
     "end_time": "2024-12-03T20:18:44.977872",
     "exception": false,
     "start_time": "2024-12-03T20:18:44.915324",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "scene-0061, Parked truck, construction, intersectio... [18-07-24 03:28:47]   19s, singapore-onenorth, #anns:4622\n",
      "scene-0103, Many peds right, wait for turning car, ... [18-08-01 19:26:43]   19s, boston-seaport, #anns:2046\n",
      "scene-0655, Parking lot, parked cars, jaywalker, be... [18-08-27 15:51:32]   20s, boston-seaport, #anns:2332\n",
      "scene-0553, Wait at intersection, bicycle, large tr... [18-08-28 20:48:16]   20s, boston-seaport, #anns:1950\n",
      "scene-0757, Arrive at busy intersection, bus, wait ... [18-08-30 19:25:08]   20s, boston-seaport, #anns:592\n",
      "scene-0796, Scooter, peds on sidewalk, bus, cars, t... [18-10-02 02:52:24]   20s, singapore-queensto, #anns:708\n",
      "scene-0916, Parking lot, bicycle rack, parked bicyc... [18-10-08 07:37:13]   20s, singapore-queensto, #anns:2387\n",
      "scene-1077, Night, big street, bus stop, high speed... [18-11-21 11:39:27]   20s, singapore-hollandv, #anns:890\n",
      "scene-1094, Night, after rain, many peds, PMD, ped ... [18-11-21 11:47:27]   19s, singapore-hollandv, #anns:1762\n",
      "scene-1100, Night, peds in sidewalk, peds cross cro... [18-11-21 11:49:47]   19s, singapore-hollandv, #anns:935\n"
     ]
    }
   ],
   "source": [
    "nusc.list_scenes()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0db39ac9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:45.088059Z",
     "iopub.status.busy": "2024-12-03T20:18:45.087291Z",
     "iopub.status.idle": "2024-12-03T20:18:45.094561Z",
     "shell.execute_reply": "2024-12-03T20:18:45.093475Z"
    },
    "papermill": {
     "duration": 0.063987,
     "end_time": "2024-12-03T20:18:45.096436",
     "exception": false,
     "start_time": "2024-12-03T20:18:45.032449",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'token': 'ca9a282c9e77460f8360f564131a8af5',\n",
       " 'timestamp': 1532402927647951,\n",
       " 'prev': '',\n",
       " 'next': '39586f9d59004284a7114a68825e8eec',\n",
       " 'scene_token': 'cc8c0bf57f984915a77078b10eb33198',\n",
       " 'data': {'RADAR_FRONT': '37091c75b9704e0daa829ba56dfa0906',\n",
       "  'RADAR_FRONT_LEFT': '11946c1461d14016a322916157da3c7d',\n",
       "  'RADAR_FRONT_RIGHT': '491209956ee3435a9ec173dad3aaf58b',\n",
       "  'RADAR_BACK_LEFT': '312aa38d0e3e4f01b3124c523e6f9776',\n",
       "  'RADAR_BACK_RIGHT': '07b30d5eb6104e79be58eadf94382bc1',\n",
       "  'LIDAR_TOP': '9d9bf11fb0e144c8b446d54a8a00184f',\n",
       "  'CAM_FRONT': 'e3d495d4ac534d54b321f50006683844',\n",
       "  'CAM_FRONT_RIGHT': 'aac7867ebf4f446395d29fbd60b63b3b',\n",
       "  'CAM_BACK_RIGHT': '79dbb4460a6b40f49f9c150cb118247e',\n",
       "  'CAM_BACK': '03bea5763f0f4722933508d5999c5fd8',\n",
       "  'CAM_BACK_LEFT': '43893a033f9c46d4a51b5e08a67a1eb7',\n",
       "  'CAM_FRONT_LEFT': 'fe5422747a7d4268a4b07fc396707b23'},\n",
       " 'anns': ['ef63a697930c4b20a6b9791f423351da',\n",
       "  '6b89da9bf1f84fd6a5fbe1c3b236f809',\n",
       "  '924ee6ac1fed440a9d9e3720aac635a0',\n",
       "  '91e3608f55174a319246f361690906ba',\n",
       "  'cd051723ed9c40f692b9266359f547af',\n",
       "  '36d52dfedd764b27863375543c965376',\n",
       "  '70af124fceeb433ea73a79537e4bea9e',\n",
       "  '63b89fe17f3e41ecbe28337e0e35db8e',\n",
       "  'e4a3582721c34f528e3367f0bda9485d',\n",
       "  'fcb2332977ed4203aa4b7e04a538e309',\n",
       "  'a0cac1c12246451684116067ae2611f6',\n",
       "  '02248ff567e3497c957c369dc9a1bd5c',\n",
       "  '9db977e264964c2887db1e37113cddaa',\n",
       "  'ca9c5dd6cf374aa980fdd81022f016fd',\n",
       "  '179b8b54ee74425893387ebc09ee133d',\n",
       "  '5b990ac640bf498ca7fd55eaf85d3e12',\n",
       "  '16140fbf143d4e26a4a7613cbd3aa0e8',\n",
       "  '54939f11a73d4398b14aeef500bf0c23',\n",
       "  '83d881a6b3d94ef3a3bc3b585cc514f8',\n",
       "  '74986f1604f047b6925d409915265bf7',\n",
       "  'e86330c5538c4858b8d3ffe874556cc5',\n",
       "  'a7bd5bb89e27455bbb3dba89a576b6a1',\n",
       "  'fbd9d8c939b24f0eb6496243a41e8c41',\n",
       "  '198023a1fb5343a5b6fad033ab8b7057',\n",
       "  'ffeafb90ecd5429cba23d0be9a5b54ee',\n",
       "  'cc636a58e27e446cbdd030c14f3718fd',\n",
       "  '076a7e3ec6244d3b84e7df5ebcbac637',\n",
       "  '0603fbaef1234c6c86424b163d2e3141',\n",
       "  'd76bd5dcc62f4c57b9cece1c7bcfabc5',\n",
       "  '5acb6c71bcd64aa188804411b28c4c8f',\n",
       "  '49b74a5f193c4759b203123b58ca176d',\n",
       "  '77519174b48f4853a895f58bb8f98661',\n",
       "  'c5e9455e98bb42c0af7d1990db1df0c9',\n",
       "  'fcc5b4b5c4724179ab24962a39ca6d65',\n",
       "  '791d1ca7e228433fa50b01778c32449a',\n",
       "  '316d20eb238c43ef9ee195642dd6e3fe',\n",
       "  'cda0a9085607438c9b1ea87f4360dd64',\n",
       "  'e865152aaa194f22b97ad0078c012b21',\n",
       "  '7962506dbc24423aa540a5e4c7083dad',\n",
       "  '29cca6a580924b72a90b9dd6e7710d3e',\n",
       "  'a6f7d4bb60374f868144c5ba4431bf4c',\n",
       "  'f1ae3f713ba946069fa084a6b8626fbf',\n",
       "  'd7af8ede316546f68d4ab4f3dbf03f88',\n",
       "  '91cb8f15ed4444e99470d43515e50c1d',\n",
       "  'bc638d33e89848f58c0b3ccf3900c8bb',\n",
       "  '26fb370c13f844de9d1830f6176ebab6',\n",
       "  '7e66fdf908d84237943c833e6c1b317a',\n",
       "  '67c5dbb3ddcc4aff8ec5140930723c37',\n",
       "  'eaf2532c820740ae905bb7ed78fb1037',\n",
       "  '3e2d17fa9aa5484d9cabc1dfca532193',\n",
       "  'de6bd5ffbed24aa59c8891f8d9c32c44',\n",
       "  '9d51d699f635478fbbcd82a70396dd62',\n",
       "  'b7cbc6d0e80e4dfda7164871ece6cb71',\n",
       "  '563a3f547bd64a2f9969278c5ef447fd',\n",
       "  'df8917888b81424f8c0670939e61d885',\n",
       "  'bb3ef5ced8854640910132b11b597348',\n",
       "  'a522ce1d7f6545d7955779f25d01783b',\n",
       "  '1fafb2468af5481ca9967407af219c32',\n",
       "  '05de82bdb8484623906bb9d97ae87542',\n",
       "  'bfedb0d85e164b7697d1e72dd971fb72',\n",
       "  'ca0f85b4f0d44beb9b7ff87b1ab37ff5',\n",
       "  'bca4bbfdef3d4de980842f28be80b3ca',\n",
       "  'a834fb0389a8453c810c3330e3503e16',\n",
       "  '6c804cb7d78943b195045082c5c2d7fa',\n",
       "  'adf1594def9e4722b952fea33b307937',\n",
       "  '49f76277d07541c5a584aa14c9d28754',\n",
       "  '15a3b4d60b514db5a3468e2aef72a90c',\n",
       "  '18cc2837f2b9457c80af0761a0b83ccc',\n",
       "  '2bfcc693ae9946daba1d9f2724478fd4']}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_scene = nusc.scene[0]\n",
    "first_sample_token = my_scene['first_sample_token']\n",
    "my_sample = nusc.get('sample', first_sample_token)\n",
    "my_sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1173c5b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:45.208991Z",
     "iopub.status.busy": "2024-12-03T20:18:45.208248Z",
     "iopub.status.idle": "2024-12-03T20:18:45.214064Z",
     "shell.execute_reply": "2024-12-03T20:18:45.213179Z"
    },
    "papermill": {
     "duration": 0.063405,
     "end_time": "2024-12-03T20:18:45.215572",
     "exception": false,
     "start_time": "2024-12-03T20:18:45.152167",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'token': '5ace90b379af485b9dcb1584b01e7212',\n",
       " 'timestamp': 1532402927814384,\n",
       " 'rotation': [0.5731787718287827,\n",
       "  -0.0015811634307974854,\n",
       "  0.013859363182046986,\n",
       "  -0.8193116095230444],\n",
       " 'translation': [410.77878632230204, 1179.4673290964536, 0.0]}"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nusc.ego_pose[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e6d6bab0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:45.329878Z",
     "iopub.status.busy": "2024-12-03T20:18:45.329244Z",
     "iopub.status.idle": "2024-12-03T20:18:56.762842Z",
     "shell.execute_reply": "2024-12-03T20:18:56.761745Z"
    },
    "papermill": {
     "duration": 11.49309,
     "end_time": "2024-12-03T20:18:56.765063",
     "exception": false,
     "start_time": "2024-12-03T20:18:45.271973",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/pty.py:89: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  pid, fd = os.forkpty()\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (3.5.3)\r\n",
      "Collecting matplotlib\r\n",
      "  Downloading matplotlib-3.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\r\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (1.2.1)\r\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (0.12.1)\r\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (4.53.0)\r\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (1.4.5)\r\n",
      "Requirement already satisfied: numpy>=1.23 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (1.26.4)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (21.3)\r\n",
      "Requirement already satisfied: pillow>=8 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (10.3.0)\r\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (3.1.2)\r\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib) (2.9.0.post0)\r\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\r\n",
      "Downloading matplotlib-3.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (8.3 MB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.3/8.3 MB\u001b[0m \u001b[31m74.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: matplotlib\r\n",
      "  Attempting uninstall: matplotlib\r\n",
      "    Found existing installation: matplotlib 3.5.3\r\n",
      "    Uninstalling matplotlib-3.5.3:\r\n",
      "      Successfully uninstalled matplotlib-3.5.3\r\n",
      "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\r\n",
      "beatrix-jupyterlab 2024.66.154055 requires jupyterlab~=3.6.0, but you have jupyterlab 4.3.1 which is incompatible.\r\n",
      "mlxtend 0.23.3 requires scikit-learn>=1.3.1, but you have scikit-learn 1.2.2 which is incompatible.\r\n",
      "nuscenes-devkit 1.1.11 requires matplotlib<3.6.0, but you have matplotlib 3.9.3 which is incompatible.\r\n",
      "ydata-profiling 4.12.0 requires scipy<1.14,>=1.4.1, but you have scipy 1.14.1 which is incompatible.\u001b[0m\u001b[31m\r\n",
      "\u001b[0mSuccessfully installed matplotlib-3.9.3\r\n"
     ]
    }
   ],
   "source": [
    "!pip install --upgrade matplotlib\n",
    "import matplotlib\n",
    "matplotlib.use('Agg')\n",
    "from mpl_toolkits.axes_grid1.inset_locator import mark_inset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "20c9ed94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:56.879421Z",
     "iopub.status.busy": "2024-12-03T20:18:56.879058Z",
     "iopub.status.idle": "2024-12-03T20:18:56.940220Z",
     "shell.execute_reply": "2024-12-03T20:18:56.939544Z"
    },
    "papermill": {
     "duration": 0.119788,
     "end_time": "2024-12-03T20:18:56.942243",
     "exception": false,
     "start_time": "2024-12-03T20:18:56.822455",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from nuscenes.utils.data_classes import LidarPointCloud\n",
    "from nuscenes.map_expansion.map_api import NuScenesMap\n",
    "import os\n",
    "import shutil\n",
    "import json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d609d0bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:57.055985Z",
     "iopub.status.busy": "2024-12-03T20:18:57.055286Z",
     "iopub.status.idle": "2024-12-03T20:18:57.072642Z",
     "shell.execute_reply": "2024-12-03T20:18:57.071473Z"
    },
    "papermill": {
     "duration": 0.076927,
     "end_time": "2024-12-03T20:18:57.075069",
     "exception": false,
     "start_time": "2024-12-03T20:18:56.998142",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def ExtractDataWithDetails(nusc, output_dir):\n",
    "    \"\"\"\n",
    "    Extract and save front camera images, front LiDAR data, ego poses, annotations, categories, and file paths \n",
    "    for all logs in all scenes, sorted by timestamps into a JSON file.\n",
    "    \n",
    "    Parameters:\n",
    "        nusc: The initialized NuScenes object.\n",
    "        output_dir: Directory to save the extracted data.\n",
    "        \n",
    "    Returns:\n",
    "        None\n",
    "    \"\"\"\n",
    "    os.makedirs(output_dir, exist_ok=True)\n",
    "\n",
    "    # Initialize list to store all extracted data\n",
    "    extracted_data = []\n",
    "\n",
    "    # Iterate over all scenes\n",
    "    for scene in nusc.scene:\n",
    "        scene_token = scene['token']\n",
    "        scene_name = scene['name']\n",
    "        scene_dir = os.path.join(output_dir, scene_name)\n",
    "        os.makedirs(scene_dir, exist_ok=True)\n",
    "\n",
    "        # Get the first sample in the scene\n",
    "        sample_token = scene['first_sample_token']\n",
    "        samples = []\n",
    "\n",
    "        # Collect all samples in the scene and sort by timestamp\n",
    "        while sample_token:\n",
    "            sample = nusc.get('sample', sample_token)\n",
    "            samples.append(sample)\n",
    "            sample_token = sample['next']\n",
    "        \n",
    "        # Sort samples by timestamp\n",
    "        samples.sort(key=lambda x: x['timestamp'])\n",
    "\n",
    "        # Iterate over sorted samples\n",
    "        for sample in samples:\n",
    "            sample_token = sample['token']\n",
    "\n",
    "            # Front camera data\n",
    "            cam_data = nusc.get('sample_data', sample['data']['CAM_FRONT'])\n",
    "            cam_filepath = os.path.join(nusc.dataroot, cam_data['filename'])\n",
    "            cam_output_path = os.path.join(scene_dir, f\"cam_{cam_data['timestamp']}.jpg\")\n",
    "            shutil.copyfile(cam_filepath, cam_output_path)\n",
    "\n",
    "            # Front LiDAR data (Point Cloud)\n",
    "            lidar_data = nusc.get('sample_data', sample['data']['LIDAR_TOP'])\n",
    "            lidar_filepath = os.path.join(nusc.dataroot, lidar_data['filename'])\n",
    "            lidar_output_path = os.path.join(scene_dir, f\"lidar_{lidar_data['timestamp']}.bin\")\n",
    "            shutil.copyfile(lidar_filepath, lidar_output_path)\n",
    "\n",
    "            # Ego pose data extraction\n",
    "            ego_pose_token = cam_data.get('ego_pose_token')\n",
    "            ego_pose = None\n",
    "            if ego_pose_token:\n",
    "                ego_pose = nusc.get('ego_pose', ego_pose_token)\n",
    "\n",
    "            # Annotations and categories\n",
    "            annotations = sample['anns']  # List of annotation tokens\n",
    "            annotations_info = []\n",
    "            for annotation_token in annotations:\n",
    "                annotation = nusc.get('sample_annotation', annotation_token)\n",
    "                \n",
    "                # Get relevant data from annotation\n",
    "                category_name = annotation.get('category_name', 'Unknown')\n",
    "                translation = annotation.get('translation', [])\n",
    "                size = annotation.get('size', [])\n",
    "                rotation = annotation.get('rotation', [])\n",
    "                \n",
    "                annotation_info = {\n",
    "                    'token': annotation['token'],\n",
    "                    'category_name': category_name,\n",
    "                    'translation': translation,\n",
    "                    'size': size,\n",
    "                    'rotation': rotation\n",
    "                }\n",
    "                annotations_info.append(annotation_info)\n",
    "\n",
    "            # Store all data in a dictionary for sorting later\n",
    "            scene_data = {\n",
    "                'timestamp': cam_data['timestamp'],\n",
    "                'scene_name': scene_name,\n",
    "                'camera': {\n",
    "                    'file_path': cam_output_path,\n",
    "                    'timestamp': cam_data['timestamp'],\n",
    "                    'description': cam_data.get('description', 'No description provided.')\n",
    "                },\n",
    "                'lidar': {\n",
    "                    'file_path': lidar_output_path,\n",
    "                    'timestamp': lidar_data['timestamp'],\n",
    "                    'description': lidar_data.get('description', 'No description provided.')\n",
    "                },\n",
    "                'ego_pose': ego_pose if ego_pose else None,\n",
    "                'annotations': annotations_info\n",
    "            }\n",
    "\n",
    "            extracted_data.append(scene_data)\n",
    "\n",
    "        # End of scene processing\n",
    "\n",
    "    # Sort all data by timestamps\n",
    "    extracted_data.sort(key=lambda x: x['timestamp'])\n",
    "\n",
    "    # Save extracted data to a JSON file\n",
    "    output_json_path = os.path.join(output_dir, 'extracted_data.json')\n",
    "    with open(output_json_path, 'w') as json_file:\n",
    "        json.dump(extracted_data, json_file, indent=4)\n",
    "\n",
    "    print(f\"Data extraction completed. All data saved to {output_json_path}.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3d800b2d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:57.212034Z",
     "iopub.status.busy": "2024-12-03T20:18:57.211460Z",
     "iopub.status.idle": "2024-12-03T20:18:58.105273Z",
     "shell.execute_reply": "2024-12-03T20:18:58.104298Z"
    },
    "papermill": {
     "duration": 0.962565,
     "end_time": "2024-12-03T20:18:58.107125",
     "exception": false,
     "start_time": "2024-12-03T20:18:57.144560",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data extraction completed. All data saved to /kaggle/working/collected_data/extracted_data.json.\n"
     ]
    }
   ],
   "source": [
    "ExtractDataWithDetails(nusc, '/kaggle/working/collected_data')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2d2836aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:58.222243Z",
     "iopub.status.busy": "2024-12-03T20:18:58.221447Z",
     "iopub.status.idle": "2024-12-03T20:18:58.323124Z",
     "shell.execute_reply": "2024-12-03T20:18:58.322351Z"
    },
    "papermill": {
     "duration": 0.160781,
     "end_time": "2024-12-03T20:18:58.325215",
     "exception": false,
     "start_time": "2024-12-03T20:18:58.164434",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def extract_json_to_dict(json_file_path):\n",
    "    with open(json_file_path, 'r') as f:\n",
    "        data = json.load(f)\n",
    "\n",
    "    result = {}\n",
    "    for entry in data:\n",
    "        scene_name = entry[\"scene_name\"]\n",
    "        timestamp = entry[\"timestamp\"]\n",
    "\n",
    "        if scene_name not in result:\n",
    "            result[scene_name] = {}\n",
    "        \n",
    "        # Add the data for the specific timestamp\n",
    "        result[scene_name][timestamp] = {\n",
    "            \"camera\": entry[\"camera\"],\n",
    "            \"lidar\": entry[\"lidar\"],\n",
    "            \"ego_pose\": entry[\"ego_pose\"]\n",
    "        }\n",
    "    \n",
    "    return result\n",
    "\n",
    "# Usage\n",
    "file_path = \"/kaggle/working/collected_data/extracted_data.json\"  # Replace with your JSON file path\n",
    "data_dict = extract_json_to_dict(file_path)\n",
    "# print(data_dict)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "24391512",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:58.438749Z",
     "iopub.status.busy": "2024-12-03T20:18:58.438050Z",
     "iopub.status.idle": "2024-12-03T20:18:58.443581Z",
     "shell.execute_reply": "2024-12-03T20:18:58.442808Z"
    },
    "papermill": {
     "duration": 0.063484,
     "end_time": "2024-12-03T20:18:58.445200",
     "exception": false,
     "start_time": "2024-12-03T20:18:58.381716",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['scene-0061', 'scene-0103', 'scene-0655', 'scene-0553', 'scene-0757', 'scene-0796', 'scene-0916', 'scene-1077', 'scene-1094', 'scene-1100'])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_dict.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "15e04968",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:58.558867Z",
     "iopub.status.busy": "2024-12-03T20:18:58.557968Z",
     "iopub.status.idle": "2024-12-03T20:18:58.563699Z",
     "shell.execute_reply": "2024-12-03T20:18:58.562900Z"
    },
    "papermill": {
     "duration": 0.06434,
     "end_time": "2024-12-03T20:18:58.565452",
     "exception": false,
     "start_time": "2024-12-03T20:18:58.501112",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys([1532402927612460, 1532402928112460, 1532402928662460, 1532402929162460, 1532402929662460, 1532402930112460, 1532402930612460, 1532402931162460, 1532402931662460, 1532402932162460, 1532402932612460, 1532402933112460, 1532402933612460, 1532402934112460, 1532402934662484, 1532402935162463, 1532402935662460, 1532402936162460, 1532402936662460, 1532402937162460, 1532402937662460, 1532402938162460, 1532402938612460, 1532402939112460, 1532402939662460, 1532402940162460, 1532402940762460, 1532402941262460, 1532402941762460, 1532402942162460, 1532402942662460, 1532402943162460, 1532402943662460, 1532402944162460, 1532402944662460, 1532402945162460, 1532402945662460, 1532402946262460, 1532402946762460])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_dict['scene-0061'].keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d3ba0391",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:58.678144Z",
     "iopub.status.busy": "2024-12-03T20:18:58.677457Z",
     "iopub.status.idle": "2024-12-03T20:18:58.682966Z",
     "shell.execute_reply": "2024-12-03T20:18:58.682153Z"
    },
    "papermill": {
     "duration": 0.063339,
     "end_time": "2024-12-03T20:18:58.684594",
     "exception": false,
     "start_time": "2024-12-03T20:18:58.621255",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(data_dict['scene-0061'].keys())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "cc2d8a31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:58.797097Z",
     "iopub.status.busy": "2024-12-03T20:18:58.796731Z",
     "iopub.status.idle": "2024-12-03T20:18:58.802400Z",
     "shell.execute_reply": "2024-12-03T20:18:58.801577Z"
    },
    "papermill": {
     "duration": 0.063762,
     "end_time": "2024-12-03T20:18:58.804032",
     "exception": false,
     "start_time": "2024-12-03T20:18:58.740270",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['camera', 'lidar', 'ego_pose'])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_dict['scene-0061'][1532402927612460].keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c6cb2966",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:58.917742Z",
     "iopub.status.busy": "2024-12-03T20:18:58.917050Z",
     "iopub.status.idle": "2024-12-03T20:18:58.922692Z",
     "shell.execute_reply": "2024-12-03T20:18:58.921903Z"
    },
    "papermill": {
     "duration": 0.064028,
     "end_time": "2024-12-03T20:18:58.924233",
     "exception": false,
     "start_time": "2024-12-03T20:18:58.860205",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['file_path', 'timestamp', 'description'])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_dict['scene-0061'][1532402927612460]['camera'].keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1a50fd8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:59.038262Z",
     "iopub.status.busy": "2024-12-03T20:18:59.037163Z",
     "iopub.status.idle": "2024-12-03T20:18:59.041522Z",
     "shell.execute_reply": "2024-12-03T20:18:59.040670Z"
    },
    "papermill": {
     "duration": 0.062563,
     "end_time": "2024-12-03T20:18:59.043167",
     "exception": false,
     "start_time": "2024-12-03T20:18:58.980604",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "## Look for bounding boxes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d321135e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:59.157181Z",
     "iopub.status.busy": "2024-12-03T20:18:59.156872Z",
     "iopub.status.idle": "2024-12-03T20:18:59.176687Z",
     "shell.execute_reply": "2024-12-03T20:18:59.175819Z"
    },
    "papermill": {
     "duration": 0.079764,
     "end_time": "2024-12-03T20:18:59.178346",
     "exception": false,
     "start_time": "2024-12-03T20:18:59.098582",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cycle.with_rider: 305\n",
      "cycle.without_rider: 434\n",
      "pedestrian.moving: 3875\n",
      "pedestrian.sitting_lying_down: 111\n",
      "pedestrian.standing: 1029\n",
      "vehicle.moving: 2715\n",
      "vehicle.parked: 4674\n",
      "vehicle.stopped: 1545\n"
     ]
    }
   ],
   "source": [
    "nusc.list_attributes()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "19016f73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:18:59.290575Z",
     "iopub.status.busy": "2024-12-03T20:18:59.289911Z",
     "iopub.status.idle": "2024-12-03T20:19:03.831674Z",
     "shell.execute_reply": "2024-12-03T20:19:03.830815Z"
    },
    "papermill": {
     "duration": 4.599785,
     "end_time": "2024-12-03T20:19:03.833582",
     "exception": false,
     "start_time": "2024-12-03T20:18:59.233797",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"871px\" height=\"1006px\" viewBox=\"-0.5 -0.5 871 1006\" content=\"&lt;mxfile modified=&quot;2020-08-19T01:45:06.770Z&quot; host=&quot;conf.ptc.delphiauto.net&quot; agent=&quot;5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36&quot; etag=&quot;0p7VAHyVE4M8T_ep-b3_&quot; version=&quot;13.1.14&quot; type=&quot;atlas&quot;&gt;&lt;mxAtlasLibraries/&gt;&lt;diagram id=&quot;reyxKgWueG0YPY5c4JO6&quot; name=&quot;Page-1&quot;&gt;7V1pc5u8Fv41mXnvO+MMu83H1E3adHXr2/WLRwbFJmEr4K2//kogMEhisSMS99aZTmOEELLOcx6do3OkXKhjb/sqAuHyfWBD90KR7O2F+vJCUWRJ09EvXLLLSgbkehE5NqmzL5g6v2H+ICldOTaMKxWTIHATJ6wWWoHvQyuplIEoCjbVaneBW31rCBbkjdK+YGoBFzLVvjl2ssxKR3qp9mvoLJb5m2WJ3PFAXpkUxEtgB5tSkXp9oY6jIEiyT952DF08dvm4ZM/d1NwtOhZBP+nywLfdmxvl+/3kZjo23kS/7IEvKwM1a2UN3BX5whZI4CKIdv+SXie7fCjijeO5wEdXL+4CP5mSOzK6tpaOa78Du2CFuxInwHrIr14sg8j5jeoDl1RGt6OESFoxcGuO644DN4jS96g36Gc8rjw5xS2iuxIqjWCMnp3k31umit6DbaXiOxAnpMAKXBeEsTMv+u2BaOH4L4IkCTxSiR1WMtJrGCVwWyoiw/wKBh5Moh2qQu7qEsE4gbxhEghs9giSNVK2LKNHUghyCWoXRdt7waIPRLYHyFln5OwDD16g4VdUOfvaxUekb1bkhIkT+JUKFBzQYCSpNKPgAebi84MMHyWJkiLgOgsfXbrwDj+GR9NBanZFipMgxI2FwHL8xbu0zkttX/KZDBIuCtCzd26qSkvHtqGPZR0kIAGZYHFvw8Dxk3QQ9RfoHxrrsXSpX+io42N0Le+v0T9cPUrGgY++C3BSsUOEmg3EyOEAolGT2lFCUIGHtgsodE0AJia3ofv+VfzW22qfJ9fGr6UVDhQGE45vo74fK2iEFGjYkv1HS3sRAdtBki59KVsfqqaN77kgjskrCzbPiMVzLPI5wF8hwTLW+XQiBj2jjpSiCGCU5MeDu1JvlK+hMlzPXq0Wn4eTQT5Bl+ADkiRy5qsEnqcOUVOHLI3MboIejvoStMwIOps7zvNB0kU/hE8IeT3xkmZnhIotcBa4WIHrytMJ/Bre/5hMpjfhxy9mMJn9erAmm4HGyNt1bBDFcPF81v8Y/dzc/MEUXkzNRMqmrHcTc+4lCBcza/yjMYf1DkAMvNCFMxsp1CxBut1R9dHjpmnII/1vswtbTb5G5RM+PxgiHAaekcox+ZDsnHkEEmjPYujHQfScxPGH234D2agyR3fjrygUL3PWJsgEnTMDj0CQAvmxC5gVhOJjqqi1dy3ETBGYIR2MHD9GntXZ8mh0HvszNWW5Ly5RWC5xg8WZPISRR/dFx964Q2G5A8kY2x58vV/DpWPV3UTWCJxZIExWEbT5VdzAAmdPpZ0vlNPmi9iUl6b65uXCuv0Uv3Ynmzff/UHecEmq0F7AnBDQoCyDReAD93pfioZ65dvQJgO9r/MuwCJMtfEeJsmOEANYJQGmgMTb0wZl4ErpD7oDt07yHZUNpEtJkknBD/ymS0U3yPXLnBbSi13pYgIjBw0MjNoYAH/JRglFEE+062q4ijf85NEJhltpwcm8HBnS/icf59wEkXX5UtYoqcbBKrIgaakccqIaH8gm01q1JUTLC5gwLV1FEdiVqhEdqf0WtS/aQy5rcg/AYgiPXy8xTgySyF7aFZgc5iUZKFXdzAv2qEyvduUrGpfpvHmF46iowMLr33ihOyu+cdy8U9C32UqosFylrDBqRWFkZSROYTJsZkXa1Pq9WW0/DF6Npi/uh9fjn87PAVknzZDXUG/4NAqoUPP20JB6URH6PUhFqHhxx45xVYp9eki/jv5eNSRyhHLyjWKZjW2ThQ3g+8T/OC9zCVvm6u6sqpIAg7NJtVmJN/iqyMNMgG811ikCW1mluMZ8ddCoO66T7B7lG2N5HuM1+ytvli7fzsKkpoe4SgSaq2BTmXsnjOD6r7WsUy7ItFmWLrUDfHO5t8QAZdibsc3oEVwEszCI4XNmBV0bf7SHTs+/mtIxLiDLAviSK2fWP3/kyl2CbDQkSC88Jw7xMNOobML5YSSAHswv1siVg1tj8tFde58G+t31r4FZN83iiNGZIEQRxNMaVFxJcyI+7RZVPlc01WHiRk2Vm6OV+O5dEHmgxm7JRo97iwziAVS2Nxvj2QPcze6i2n61WVJngqwYVVwdaqSf0zSo+HrEiaKlenS2p0TRZec0CyHxDr6U2RWHFhaJLeg38uTZHWtlDrk7cxRqeJqBD36fOYsa6Yz5bMzx/xcrfWJfjC9n1qq2lsD38XYqnv57gQ3wWtPZkOiu/qPOSDkVV0sZMkJ91hhTrfYJDpMcGt1g8uap6EZLtELLO0Q/fnDIs7YjbfGcI+IefMSw8wWiCBerybwCJOPXKsjn0kG66KxeoQryKNxmTEPuo08L8tvN6z+qoa9FmoebFd9kTVZfg4rn+zI+sdVCtp3jkOGVBhMZlvMQX6VatFk6CZwibsPv3EQgZDSrbIWMqFlX62OeMnIstXoyfc1SKrsgUEJXJq3rLeJoiywSnmXJ9VZOQJKsS8pI8qoIlJ4lWRv4PAFRsvs4GFH+F2wDP/B2Z0HWb9N+SkFy49cGI8c8On1OVBCnr50TY2nLTZich4yc81MXGteC5lEpdaUmfn/nRHFSqtbUoAu4Vc9OZNJBR8UvISkCnEhulzk7eNOFx/PiszBzrjOniNjkxxcya88dfsRHKZV+0UZFWQCjkYbaY4UpBVWr/aX0076k3azb4vlIxD5Cfp/ZOIkHwvPOQXELBU8bDOMLmbO5PCeVGtLIjaC2LIC/lCG6MkJvCYdCglzcnRQKI9QnWOXOdyRUd+/oF01bEbruvpAvKrsvRrJ+ccTui1pqaN3kQDyM8iaHpnPBnnn1XlOq9HXYVgNd0rhP97DizgXvs+xMK+AmI7RpVbQZ2rAFbR33tRkVzVC1w/e1CYY1Z+9OYyZG75t36E0QiqpX26iJGx28e0elXyS37N6hH5CISdDrjriT26WZa4lU1ZA2Nq5FaBl5/BEwngZ5TJxRG3ZjvYO5md7IpUhmI/KYBzRTPYDN6bmgeF8PG8f4EmSPy9nv7DmfiiruaLunTbpp1NaykwLXdSk358PQuh+GpneGxzOk2vB9EHaVlJGytYrW6UxVu+n5sGmp6iaImJQa8x5bJ6XS4Oucsc/LHms1SdRqhd7NaGIb0qmGJKohUXun6feoT2BL5fD78/B4IjBjLAlZ6WZJtLdUbM3p29iSq8bWo5H2c7P173e/F54yf/1R2sTh8MWMs93zDLTH8NnxQGNa6gtoNKMJBxp4M1V/a8atqVkfXpnWx7svn0Y50J5nmS9foiBnjmSLJn/GIT2FbdLzGSF17+nmubHnhVxKum4WP51U4gioGXA3/fz1pT6fKZ75LTKt3fA3l9OyzKfwgpe86jo+HOTckKavYg3R69NgkSnuc1uyMt7DbUSL+T8Kcn6xwY3+1/Yfh8P/4M+4OYnOm9XCLfvaqxjh0IkfkPSkf/7FDzu+7eCICfroBbZz51h5XohkBR5GqY1twwD/t8S1/NWtBxY4YivF1hJ64LLIEov2aWLzNKYrAR8/fedA104vbTttzvHThqY4fSAe5KcFY1oFa/wOgBVkFYU4vVeaI/d0kepv2ic0LJw3lhLSsiFlisMe89Rq/K8DstRqSeGQ8J0+rKiOPiQzcGn+GqmcCcwQcDI0V314tmcmENtZd1YFCtlKiuwy6jclhRviuY+GfQ61ArPtcKl08KkAkznsz4QWVWXRYgxZtIiI9XKPMuZtOaAn+habsRLPUKurteR8sEOjZx1Hvt17lk7L2qTPFzeO9J5VkzY2aT9clLGp8XtcawVrtHHatJnnCIthdH8L4jdr6+MH+/7LZCmtruZGFy+IC2IbxMvCNSohugq/ykF6hFPKp+ixIWSlqgSG2hbU4ypB9RC+TkrQ9MeCTkQHaIfcPHa7lkbpwJBeXuzJsTdbDt+j6+f96lUD2En/1gtdx3ISF39XZCI/pEfvUhbc2sFW3+U8tQ1xlk7cw7wrekOBoMmYAeKQjWmMOHogYgvB24f79293u8gAn2+ku/vp/fhePZrFDjr0dp8lUyzf1DrStYPcGuzPg/itSSzKaZETreodD75k2pFpbNFhMHF5LVwo8XwAcVAqIvP7YPyj1gLLcGr8Swbt9t7opOBEW2kqnYXXGU+0WcX8pZCeAcWm/QoEVC0wTkSMMh1Dko802+mGRqOnpQXeZsMeZhhVL88xcuMcU5t5ljdVOQw7ta61Fp4RnLjWnXxOay4rUi/q5qCjJzP6zLqeUcsm9fSCWsF2UdP5Z+KSIJ+HAGWJJq5jGbDzwoUoMLFZQyLBdKRltAehZpqPos7joZmzQxmbTYeengo06WRZld6m1xmajLVGe3pHQxNd7v9YfFYdObnL94ENcY3/AQ==&lt;/diagram&gt;&lt;/mxfile&gt;\" style=\"background-color: rgb(255, 255, 255);\"><defs><clipPath id=\"mx-clip-669-188-132-54-0\"><rect x=\"669\" y=\"188\" width=\"132\" height=\"54\"/></clipPath><linearGradient x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\" id=\"mx-gradient-e6d0de-1-d5739d-1-s-0\"><stop offset=\"0%\" style=\"stop-color:#e6d0de\"/><stop offset=\"100%\" style=\"stop-color:#d5739d\"/></linearGradient><clipPath id=\"mx-clip-669-242-132-22-0\"><rect x=\"669\" y=\"242\" width=\"132\" height=\"22\"/></clipPath><clipPath id=\"mx-clip-669-587-132-26-0\"><rect x=\"669\" y=\"587\" width=\"132\" height=\"26\"/></clipPath><clipPath id=\"mx-clip-669-613-132-26-0\"><rect x=\"669\" y=\"613\" width=\"132\" height=\"26\"/></clipPath><clipPath id=\"mx-clip-444-413-132-64-0\"><rect x=\"444\" y=\"413\" width=\"132\" height=\"64\"/></clipPath><clipPath id=\"mx-clip-4-587-132-114-0\"><rect x=\"4\" y=\"587\" width=\"132\" height=\"114\"/></clipPath><clipPath id=\"mx-clip-4-188-132-114-0\"><rect x=\"4\" y=\"188\" width=\"132\" height=\"114\"/></clipPath><clipPath id=\"mx-clip-444-587-132-274-0\"><rect x=\"444\" y=\"587\" width=\"132\" height=\"274\"/></clipPath><clipPath id=\"mx-clip-224-923-132-84-0\"><rect x=\"224\" y=\"923\" width=\"132\" height=\"84\"/></clipPath><clipPath id=\"mx-clip-224-587-132-274-0\"><rect x=\"224\" y=\"587\" width=\"132\" height=\"274\"/></clipPath><clipPath id=\"mx-clip-224-413-132-114-0\"><rect x=\"224\" y=\"413\" width=\"132\" height=\"114\"/></clipPath><clipPath id=\"mx-clip-4-923-132-84-0\"><rect x=\"4\" y=\"923\" width=\"132\" height=\"84\"/></clipPath><clipPath id=\"mx-clip-444-188-132-124-0\"><rect x=\"444\" y=\"188\" width=\"132\" height=\"124\"/></clipPath><clipPath id=\"mx-clip-224-188-132-164-0\"><rect x=\"224\" y=\"188\" width=\"132\" height=\"164\"/></clipPath><clipPath id=\"mx-clip-4-413-132-114-0\"><rect x=\"4\" y=\"413\" width=\"132\" height=\"114\"/></clipPath><clipPath id=\"mx-clip-669-923-132-84-0\"><rect x=\"669\" y=\"923\" width=\"132\" height=\"84\"/></clipPath></defs><g><path d=\"M 665 183 L 665 157 L 805 157 L 805 183\" fill=\"#ffffcc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><path d=\"M 665 183 L 665 259 L 805 259 L 805 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 665 183 L 805 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"734.5\" y=\"174.5\">category*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-669-188-132-54-0)\" font-size=\"12px\"><text x=\"670.5\" y=\"200.5\">name</text><text x=\"670.5\" y=\"228.5\">description</text></g><rect x=\"665\" y=\"237\" width=\"140\" height=\"22\" fill-opacity=\"0.5\" fill=\"url(#mx-gradient-e6d0de-1-d5739d-1-s-0)\" stroke=\"none\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-669-242-132-22-0)\" font-size=\"12px\"><text x=\"670.5\" y=\"254.5\">index</text></g><path d=\"M 665 582 L 665 556 L 805 556 L 805 582\" fill=\"#ffffcc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 665 582 L 665 634 L 805 634 L 805 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 665 582 L 805 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"734.5\" y=\"573.5\">attribute</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-669-587-132-26-0)\" font-size=\"12px\"><text x=\"670.5\" y=\"599.5\">name</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-669-613-132-26-0)\" font-size=\"12px\"><text x=\"670.5\" y=\"625.5\">description</text></g><path d=\"M 440 408 L 440 382 L 580 382 L 580 408\" fill=\"#ccccff\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 440 408 L 440 472 L 580 472 L 580 408\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 440 408 L 580 408\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"509.5\" y=\"399.5\">lidarseg*</text></g><rect x=\"440\" y=\"408\" width=\"140\" height=\"64\" fill-opacity=\"0.5\" fill=\"url(#mx-gradient-e6d0de-1-d5739d-1-s-0)\" stroke=\"#996185\" stroke-opacity=\"0.5\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-444-413-132-64-0)\" font-size=\"12px\"><text x=\"445.5\" y=\"425.5\">filename</text><text x=\"445.5\" y=\"453.5\">sample_data_token</text></g><path d=\"M 0 582 L 0 556 L 140 556 L 140 582\" fill=\"#ccffcc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 582 L 0 696 L 140 696 L 140 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 582 L 140 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"69.5\" y=\"573.5\">calibrated_sensor*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-4-587-132-114-0)\" font-size=\"12px\"><text x=\"5.5\" y=\"599.5\">sensor_token</text><text x=\"5.5\" y=\"627.5\">translation</text><text x=\"5.5\" y=\"655.5\">rotation</text><text x=\"5.5\" y=\"683.5\">camera_intrinsic</text></g><path d=\"M 0 183 L 0 157 L 140 157 L 140 183\" fill=\"#ccffcc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 183 L 0 297 L 140 297 L 140 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 183 L 140 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"69.5\" y=\"174.5\">log</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-4-188-132-114-0)\" font-size=\"12px\"><text x=\"5.5\" y=\"200.5\">logfile</text><text x=\"5.5\" y=\"228.5\">vehicle</text><text x=\"5.5\" y=\"256.5\">date_captured</text><text x=\"5.5\" y=\"284.5\">location</text></g><path d=\"M 219.86 618.14 L 141 618 L 147.37 618.01\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 142.12 618 L 149.12 614.51 L 147.37 618.01 L 149.11 621.51 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 433.21 617.08 L 420 617.1 L 420 227.52 L 432.65 227.52\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 438.46 617.07 L 431.47 620.58 L 433.21 617.08 L 431.46 613.58 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 437.9 227.52 L 430.9 231.02 L 432.65 227.52 L 430.9 224.02 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 440 582 L 440 556 L 580 556 L 580 582\" fill=\"#ccccff\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 440 582 L 440 856 L 580 856 L 580 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 440 582 L 580 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"509.5\" y=\"573.5\">sample_annotation*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-444-587-132-274-0)\" font-size=\"10.4px\"><text x=\"445.5\" y=\"597.9\">sample_token</text><text x=\"445.5\" y=\"621.9\">instance_token</text><text x=\"445.5\" y=\"645.9\">attribute_tokens</text><text x=\"445.5\" y=\"669.9\">visibility_token</text><text x=\"445.5\" y=\"693.9\">translation</text><text x=\"445.5\" y=\"717.9\">size</text><text x=\"445.5\" y=\"741.9\">rotation</text><text x=\"445.5\" y=\"765.9\">num_lidar_pts</text><text x=\"445.5\" y=\"789.9\">num_radar_pts</text><text x=\"445.5\" y=\"813.9\">next</text><text x=\"445.5\" y=\"837.9\">prev</text></g><path d=\"M 220 918 L 220 892 L 360 892 L 360 918\" fill=\"#ffe6cc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 918 L 220 1002 L 360 1002 L 360 918\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 918 L 360 918\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"289.5\" y=\"909.5\">ego_pose*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-224-923-132-84-0)\" font-size=\"12px\"><text x=\"225.5\" y=\"935.5\">translation</text><text x=\"225.5\" y=\"963.5\">rotation</text><text x=\"225.5\" y=\"991.5\">timestamp</text></g><path d=\"M 220 582 L 220 556 L 360 556 L 360 582\" fill=\"#ffe6cc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 582 L 220 856 L 360 856 L 360 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 582 L 360 582\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"289.5\" y=\"573.5\">sample_data</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-224-587-132-274-0)\" font-size=\"10px\"><text x=\"225.5\" y=\"597.5\">sample_token</text><text x=\"225.5\" y=\"621.5\">ego_pose_token</text><text x=\"225.5\" y=\"645.5\">calibrated_sensor_token</text><text x=\"225.5\" y=\"669.5\">filename</text><text x=\"225.5\" y=\"693.5\">fileformat</text><text x=\"225.5\" y=\"717.5\">width</text><text x=\"225.5\" y=\"741.5\">height</text><text x=\"225.5\" y=\"765.5\">timestamp</text><text x=\"225.5\" y=\"789.5\">is_key_frame</text><text x=\"225.5\" y=\"813.5\">next</text><text x=\"225.5\" y=\"837.5\">prev</text></g><path d=\"M 220 408 L 220 382 L 360 382 L 360 408\" fill=\"#ffe6cc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 408 L 220 522 L 360 522 L 360 408\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 408 L 360 408\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"289.5\" y=\"399.5\">sample*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-224-413-132-114-0)\" font-size=\"11px\"><text x=\"225.5\" y=\"424.5\">timestamp</text><text x=\"225.5\" y=\"450.5\">scene_token</text><text x=\"225.5\" y=\"476.5\">next</text><text x=\"225.5\" y=\"502.5\">prev</text></g><path d=\"M 0 918 L 0 892 L 140 892 L 140 918\" fill=\"#ccffcc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 918 L 0 1002 L 140 1002 L 140 918\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 918 L 140 918\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"69.5\" y=\"909.5\">sensor</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-4-923-132-84-0)\" font-size=\"12px\"><text x=\"5.5\" y=\"935.5\">channel</text><text x=\"5.5\" y=\"963.5\">modality</text></g><path d=\"M 581 617 L 665 617 L 658.63 617\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 663.88 617 L 656.88 620.5 L 658.63 617 L 656.88 613.5 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 127px; margin-left: 1px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 18px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; text-decoration: underline; white-space: normal; word-wrap: normal; \"><b style=\"font-size: 18px\"><font style=\"font-size: 18px\">Vehicle</font></b></div></div></div></foreignObject><text x=\"70\" y=\"132\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"18px\" text-anchor=\"middle\" text-decoration=\"underline\">Vehicle</text></switch></g><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 127px; margin-left: 221px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 18px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; text-decoration: underline; white-space: normal; word-wrap: normal; \"><b>Extraction</b></div></div></div></foreignObject><text x=\"290\" y=\"132\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"18px\" text-anchor=\"middle\" text-decoration=\"underline\">Extraction</text></switch></g><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 127px; margin-left: 441px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 18px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; text-decoration: underline; white-space: normal; word-wrap: normal; \"><b>Annotation</b></div></div></div></foreignObject><text x=\"510\" y=\"132\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"18px\" text-anchor=\"middle\" text-decoration=\"underline\">Annotation</text></switch></g><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 127px; margin-left: 666px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 18px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; text-decoration: underline; white-space: normal; word-wrap: normal; \"><b>Taxonomy</b></div></div></div></foreignObject><text x=\"735\" y=\"132\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"18px\" text-anchor=\"middle\" text-decoration=\"underline\">Taxonomy</text></switch></g><path d=\"M 440 183 L 440 157 L 580 157 L 580 183\" fill=\"#ccccff\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 440 183 L 440 307 L 580 307 L 580 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 440 183 L 580 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"509.5\" y=\"174.5\">instance*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-444-188-132-124-0)\" font-size=\"12px\"><text x=\"445.5\" y=\"200.5\">category_token</text><text x=\"445.5\" y=\"228.5\">nbr_annotations</text><text x=\"445.5\" y=\"256.5\">first_annotation_token</text><text x=\"445.5\" y=\"284.5\">last_annotation_token</text></g><path d=\"M 220 183 L 220 157 L 360 157 L 360 183\" fill=\"#ffe6cc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 183 L 220 347 L 360 347 L 360 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 183 L 360 183\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"289.5\" y=\"174.5\">scene*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-224-188-132-164-0)\" font-size=\"11px\"><text x=\"225.5\" y=\"199.5\">name</text><text x=\"225.5\" y=\"225.5\">description</text><text x=\"225.5\" y=\"251.5\">log_token</text><text x=\"225.5\" y=\"277.5\">nbr_samples</text><text x=\"225.5\" y=\"303.5\">first_sample_token</text><text x=\"225.5\" y=\"329.5\">last_sample_token</text></g><path d=\"M 0 408 L 0 382 L 140 382 L 140 408\" fill=\"#ccffcc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 408 L 0 522 L 140 522 L 140 408\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 0 408 L 140 408\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"69.5\" y=\"399.5\">map*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-4-413-132-114-0)\" font-size=\"12px\"><text x=\"5.5\" y=\"425.5\">log_tokens</text><text x=\"5.5\" y=\"453.5\">category</text><text x=\"5.5\" y=\"481.5\">filename</text></g><path d=\"M 580 245 L 580 227 L 658.49 227.01\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 663.74 227.01 L 656.74 230.51 L 658.49 227.01 L 656.74 223.51 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 439.16 676.8 L 390 676.81 L 390 481.81 L 366.93 481.77\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 361.68 481.76 L 368.68 478.27 L 366.93 481.77 L 368.67 485.27 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 580 676 L 630 676 L 630 960 L 658.63 960\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 663.88 960 L 656.88 963.5 L 658.63 960 L 656.88 956.5 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 665 918 L 665 892 L 805 892 L 805 918\" fill=\"#ffffcc\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 665 918 L 665 1002 L 805 1002 L 805 918\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 665 918 L 805 918\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g fill=\"#000000\" font-family=\"Helvetica\" font-weight=\"bold\" text-anchor=\"middle\" font-size=\"12px\"><text x=\"734.5\" y=\"909.5\">visibility*</text></g><g fill=\"#000000\" font-family=\"Helvetica\" clip-path=\"url(#mx-clip-669-923-132-84-0)\" font-size=\"12px\"><text x=\"670.5\" y=\"935.5\">level</text><text x=\"670.5\" y=\"963.5\">description</text></g><path d=\"M 360 422 Q 410 402 365.91 384.37\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 361.04 382.42 L 368.84 381.77 L 365.91 384.37 L 366.24 388.26 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 580 596 Q 630 576 585.91 558.37\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 581.04 556.42 L 588.84 555.77 L 585.91 558.37 L 586.24 562.26 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 360 596 Q 410 576 365.91 558.37\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 361.04 556.42 L 368.84 555.77 L 365.91 558.37 L 366.24 562.26 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 220 227.06 L 139 227 L 145.37 227\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 140.12 227 L 147.12 223.51 L 145.37 227 L 147.12 230.51 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 828px; height: 1px; padding-top: 72px; margin-left: 5px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: left; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; \"><p style=\"line-height: 150%\"><span style=\"color: rgb(23 , 43 , 77) ; font-size: 14px\">Asterisks (*) indicate modifications compared to the nuImages schema.<br/>Tables and fields added in nuScenes-lidarseg have a purple background color.<br/></span></p></div></div></div></foreignObject><text x=\"5\" y=\"76\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\">Asterisks (*) indicate modifications compared to the nuImages schema....</text></switch></g><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 865px; height: 1px; padding-top: 7px; margin-left: 5px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: left; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; \"><div><span style=\"font-size: 24px ; font-weight: 700\">nuScenes schema</span></div></div></div></div></foreignObject><text x=\"5\" y=\"19\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\">nuScenes schema</text></switch></g><path d=\"M 440 432 L 400 432 L 400 617 L 366.79 617.06\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 361.54 617.07 L 368.53 613.56 L 366.79 617.06 L 368.54 620.56 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 580 417 L 630 417 L 630 251 L 658.35 251.01\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" stroke-dasharray=\"3 3\" pointer-events=\"none\"/><path d=\"M 663.6 251.01 L 656.6 254.51 L 658.35 251.01 L 656.6 247.51 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 452px; margin-left: 581px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 10px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; \">Implicitly linked<br/>via .bin files</div></div></div></foreignObject><text x=\"620\" y=\"455\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"10px\" text-anchor=\"middle\">Implicitly linke...</text></switch></g><path d=\"M 70 382 L 70 303.37\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 70 298.12 L 73.5 305.12 L 70 303.37 L 66.5 305.12 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 70 696 L 70 885.63\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 70 890.88 L 66.5 883.88 L 70 885.63 L 73.5 883.88 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 310 382 L 310 353.37\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 310 348.12 L 313.5 355.12 L 310 353.37 L 306.5 355.12 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 269.7 347 L 269.93 375.07\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 269.97 380.32 L 266.41 373.35 L 269.93 375.07 L 273.41 373.29 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 290 556 L 290 528.37\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 290 523.12 L 293.5 530.12 L 290 528.37 L 286.5 530.12 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 289.86 856 L 289.98 885.63\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/><path d=\"M 290 890.88 L 286.47 883.9 L 289.98 885.63 L 293.47 883.87 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-miterlimit=\"10\" pointer-events=\"none\"/></g><switch><g requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"/><a transform=\"translate(0,-5)\" xlink:href=\"https://desk.draw.io/support/solutions/articles/16000042487\" target=\"_blank\"><text text-anchor=\"middle\" font-size=\"10px\" x=\"50%\" y=\"100%\">Viewer does not support full SVG 1.1</text></a></switch></svg>"
      ],
      "text/plain": [
       "<IPython.core.display.SVG object>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from IPython.display import SVG\n",
    "SVG('https://drive.google.com/uc?id=1MysPXkfCJcNO_bbuCZQBmKusqSrzLYhk')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "0a43be06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:03.950708Z",
     "iopub.status.busy": "2024-12-03T20:19:03.950014Z",
     "iopub.status.idle": "2024-12-03T20:19:03.956673Z",
     "shell.execute_reply": "2024-12-03T20:19:03.955808Z"
    },
    "papermill": {
     "duration": 0.06748,
     "end_time": "2024-12-03T20:19:03.958339",
     "exception": false,
     "start_time": "2024-12-03T20:19:03.890859",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Changed from `pedestrian.moving` to `pedestrian.standing` at timestamp 21 out of 39 annotated timestamps\n"
     ]
    }
   ],
   "source": [
    "# An instance in nuScenes is an object instance, such as a particular vehicle, \n",
    "# which includes metadata like the category of the object, \n",
    "# the number of annotations, and tokens pointing to the first and last annotations of the instance.\n",
    "my_instance = nusc.instance[27]\n",
    "first_token = my_instance['first_annotation_token']\n",
    "last_token = my_instance['last_annotation_token']\n",
    "nbr_samples = my_instance['nbr_annotations']\n",
    "current_token = first_token\n",
    "\n",
    "i = 0\n",
    "found_change = False\n",
    "while current_token != last_token:\n",
    "    current_ann = nusc.get('sample_annotation', current_token)\n",
    "    current_attr = nusc.get('attribute', current_ann['attribute_tokens'][0])['name']\n",
    "    \n",
    "    if i == 0:\n",
    "        pass\n",
    "    elif current_attr != last_attr:\n",
    "        print(\"Changed from `{}` to `{}` at timestamp {} out of {} annotated timestamps\".format(last_attr, current_attr, i, nbr_samples))\n",
    "        found_change = True\n",
    "\n",
    "    next_token = current_ann['next']\n",
    "    current_token = next_token\n",
    "    last_attr = current_attr\n",
    "    i += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91f6753a",
   "metadata": {
    "papermill": {
     "duration": 0.056168,
     "end_time": "2024-12-03T20:19:04.073601",
     "exception": false,
     "start_time": "2024-12-03T20:19:04.017433",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In the nuScenes database schema, the `first_annotation_token` and `last_annotation_token` keys in the `instance` table are used to link to the annotations of a specific object instance. Here is a more detailed explanation:\r\n",
    "\r\n",
    "- `first_annotation_token`: This key points to the first annotation of an object instance in the `sample_annotation` table. It indicates the initial appearance of the object in the dataset.\r\n",
    "- `last_annotation_token`: This key points to the last annotation of an object instance in the `sample_annotation` table. It indicates the final appearance of the object in the dataset.\r\n",
    "\r\n",
    "These keys help in tracking the temporal sequence of annotations for a given object instance across multiple samples within a scene."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a31b576d",
   "metadata": {
    "papermill": {
     "duration": 0.058214,
     "end_time": "2024-12-03T20:19:04.188454",
     "exception": false,
     "start_time": "2024-12-03T20:19:04.130240",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "This code initializes the NuScenes dataset, iterates over each keyframe in a scene, and extracts the bounding box coordinates and labels for each annotated object. Adjust the scene_token to process different scenes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5fe18208",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:04.303073Z",
     "iopub.status.busy": "2024-12-03T20:19:04.302707Z",
     "iopub.status.idle": "2024-12-03T20:19:04.312987Z",
     "shell.execute_reply": "2024-12-03T20:19:04.312328Z"
    },
    "papermill": {
     "duration": 0.069625,
     "end_time": "2024-12-03T20:19:04.314480",
     "exception": false,
     "start_time": "2024-12-03T20:19:04.244855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from nuscenes.nuscenes import NuScenes\n",
    "from pyquaternion import Quaternion\n",
    "import numpy as np\n",
    "\n",
    "def extract_bounding_boxes_and_labels(nusc, scene_token):\n",
    "    # Get the scene record\n",
    "    scene = nusc.get('scene', scene_token)\n",
    "    \n",
    "    # Get the first sample in the scene\n",
    "    sample_token = scene['first_sample_token']\n",
    "    \n",
    "    while sample_token:\n",
    "        sample = nusc.get('sample', sample_token)\n",
    "        \n",
    "        # Loop through all sample_data records for the sample\n",
    "        for sd_token in sample['data'].values():\n",
    "            sd_record = nusc.get('sample_data', sd_token)\n",
    "            \n",
    "            # Only process keyframes\n",
    "            if not sd_record['is_key_frame']:\n",
    "                continue\n",
    "\n",
    "            # Ensure 'anns' exists in sd_record\n",
    "            if 'anns' not in sd_record:\n",
    "                continue\n",
    "\n",
    "            # Get the annotations for the sample_data\n",
    "            ann_tokens = sd_record['anns']\n",
    "            for ann_token in ann_tokens:\n",
    "                ann_record = nusc.get('sample_annotation', ann_token)\n",
    "                \n",
    "                # Get the 3D bounding box\n",
    "                box = nusc.get_box(ann_token)\n",
    "                \n",
    "                # Transform box to the sensor's coordinate frame\n",
    "                cs_record = nusc.get('calibrated_sensor', sd_record['calibrated_sensor_token'])\n",
    "                ego_pose = nusc.get('ego_pose', sd_record['ego_pose_token'])\n",
    "                \n",
    "                box.translate(-np.array(ego_pose['translation']))\n",
    "                box.rotate(Quaternion(ego_pose['rotation']).inverse)\n",
    "                box.translate(-np.array(cs_record['translation']))\n",
    "                box.rotate(Quaternion(cs_record['rotation']).inverse)\n",
    "\n",
    "                # Get the corners of the bounding box in the image frame\n",
    "                corners = box.corners()\n",
    "                \n",
    "                # Get the label of the bounding box\n",
    "                label = ann_record['category_name']\n",
    "                \n",
    "                print(f\"Sample: {sample_token}, Bounding Box: {corners}, Label: {label}\")\n",
    "        \n",
    "        # Move to the next sample in the scene\n",
    "        sample_token = sample['next']\n",
    "\n",
    "# # Initialize NuScenes\n",
    "# nusc = NuScenes(version='v1.0-mini', dataroot='/data/sets/nuscenes', verbose=True)\n",
    "\n",
    "# Extract bounding boxes and labels for a specific scene\n",
    "scene_token = nusc.scene[0]['token']\n",
    "extract_bounding_boxes_and_labels(nusc, scene_token)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3d5be41f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:04.429907Z",
     "iopub.status.busy": "2024-12-03T20:19:04.429588Z",
     "iopub.status.idle": "2024-12-03T20:19:04.434861Z",
     "shell.execute_reply": "2024-12-03T20:19:04.434007Z"
    },
    "papermill": {
     "duration": 0.064817,
     "end_time": "2024-12-03T20:19:04.436400",
     "exception": false,
     "start_time": "2024-12-03T20:19:04.371583",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "print(extract_bounding_boxes_and_labels(nusc, scene_token))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "03a42d67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:04.550863Z",
     "iopub.status.busy": "2024-12-03T20:19:04.550005Z",
     "iopub.status.idle": "2024-12-03T20:19:05.584751Z",
     "shell.execute_reply": "2024-12-03T20:19:05.583877Z"
    },
    "papermill": {
     "duration": 1.093948,
     "end_time": "2024-12-03T20:19:05.586666",
     "exception": false,
     "start_time": "2024-12-03T20:19:04.492718",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "======\n",
      "Loading NuScenes tables for version v1.0-mini...\n",
      "23 category,\n",
      "8 attribute,\n",
      "4 visibility,\n",
      "911 instance,\n",
      "12 sensor,\n",
      "120 calibrated_sensor,\n",
      "31206 ego_pose,\n",
      "8 log,\n",
      "10 scene,\n",
      "404 sample,\n",
      "31206 sample_data,\n",
      "18538 sample_annotation,\n",
      "4 map,\n",
      "Done loading in 0.910 seconds.\n",
      "======\n",
      "Reverse indexing ...\n",
      "Done reverse indexing in 0.1 seconds.\n",
      "======\n",
      "Processing scene: cc8c0bf57f984915a77078b10eb33198\n",
      "[]\n"
     ]
    }
   ],
   "source": [
    "from nuscenes.nuscenes import NuScenes\n",
    "from pyquaternion import Quaternion\n",
    "import numpy as np\n",
    "\n",
    "def extract_bounding_boxes_and_labels(nusc, scene_token):\n",
    "    results = []\n",
    "\n",
    "    # Get the scene record\n",
    "    scene = nusc.get('scene', scene_token)\n",
    "    print(f\"Processing scene: {scene_token}\")\n",
    "    \n",
    "    # Get the first sample in the scene\n",
    "    sample_token = scene['first_sample_token']\n",
    "    \n",
    "    while sample_token:\n",
    "        sample = nusc.get('sample', sample_token)\n",
    "        # print(f\"Processing sample: {sample_token}\")\n",
    "        \n",
    "        # Loop through all sample_data records for the sample\n",
    "        for sd_token in sample['data'].values():\n",
    "            sd_record = nusc.get('sample_data', sd_token)\n",
    "            # print(f\"Processing sample_data: {sd_token}\")\n",
    "            \n",
    "            # Only process keyframes\n",
    "            if not sd_record['is_key_frame']:\n",
    "                continue\n",
    "\n",
    "            # Ensure 'anns' exists in sd_record\n",
    "            if 'anns' not in sd_record:\n",
    "                continue\n",
    "\n",
    "            # Get the annotations for the sample_data\n",
    "            ann_tokens = sd_record['anns']\n",
    "            for ann_token in ann_tokens:\n",
    "                ann_record = nusc.get('sample_annotation', ann_token)\n",
    "                \n",
    "                # Get the 3D bounding box\n",
    "                box = nusc.get_box(ann_token)\n",
    "                \n",
    "                # Transform box to the sensor's coordinate frame\n",
    "                cs_record = nusc.get('calibrated_sensor', sd_record['calibrated_sensor_token'])\n",
    "                ego_pose = nusc.get('ego_pose', sd_record['ego_pose_token'])\n",
    "                \n",
    "                box.translate(-np.array(ego_pose['translation']))\n",
    "                box.rotate(Quaternion(ego_pose['rotation']).inverse)\n",
    "                box.translate(-np.array(cs_record['translation']))\n",
    "                box.rotate(Quaternion(cs_record['rotation']).inverse)\n",
    "\n",
    "                # Get the corners of the bounding box in the image frame\n",
    "                corners = box.corners()\n",
    "                \n",
    "                # Get the label of the bounding box\n",
    "                label = ann_record['category_name']\n",
    "                \n",
    "                results.append({\"sample_token\": sample_token, \"bounding_box\": corners, \"label\": label})\n",
    "        \n",
    "        # Move to the next sample in the scene\n",
    "        sample_token = sample['next']\n",
    "    \n",
    "    return results\n",
    "\n",
    "# Initialize NuScenes\n",
    "nusc = NuScenes(version='v1.0-mini', dataroot='/data/sets/nuscenes', verbose=True)\n",
    "\n",
    "# Extract bounding boxes and labels for a specific scene\n",
    "scene_token = nusc.scene[0]['token']\n",
    "bounding_boxes_and_labels = extract_bounding_boxes_and_labels(nusc, scene_token)\n",
    "\n",
    "# Example of how to use the stored results\n",
    "print(bounding_boxes_and_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "e496ee41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:05.713741Z",
     "iopub.status.busy": "2024-12-03T20:19:05.712739Z",
     "iopub.status.idle": "2024-12-03T20:19:05.718429Z",
     "shell.execute_reply": "2024-12-03T20:19:05.717489Z"
    },
    "papermill": {
     "duration": 0.06946,
     "end_time": "2024-12-03T20:19:05.720692",
     "exception": false,
     "start_time": "2024-12-03T20:19:05.651232",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of `logs` in our loaded database: 8\n",
      "There are 4 maps masks in the loaded dataset\n"
     ]
    }
   ],
   "source": [
    "print(\"Number of `logs` in our loaded database: {}\".format(len(nusc.log)))\n",
    "print(\"There are {} maps masks in the loaded dataset\".format(len(nusc.map)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "05c2f185",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:05.847949Z",
     "iopub.status.busy": "2024-12-03T20:19:05.847567Z",
     "iopub.status.idle": "2024-12-03T20:19:05.853600Z",
     "shell.execute_reply": "2024-12-03T20:19:05.852800Z"
    },
    "papermill": {
     "duration": 0.073764,
     "end_time": "2024-12-03T20:19:05.855358",
     "exception": false,
     "start_time": "2024-12-03T20:19:05.781594",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'category': 'semantic_prior',\n",
       " 'token': '53992ee3023e5494b90c316c183be829',\n",
       " 'filename': 'maps/53992ee3023e5494b90c316c183be829.png',\n",
       " 'log_tokens': ['0986cb758b1d43fdaa051ab23d45582b',\n",
       "  '1c9b302455ff44a9a290c372b31aa3ce',\n",
       "  'e60234ec7c324789ac7c8441a5e49731',\n",
       "  '46123a03f41e4657adc82ed9ddbe0ba2',\n",
       "  'a5bb7f9dd1884f1ea0de299caefe7ef4',\n",
       "  'bc41a49366734ebf978d6a71981537dc',\n",
       "  'f8699afb7a2247e38549e4d250b4581b',\n",
       "  'd0450edaed4a46f898403f45fa9e5f0d',\n",
       "  'f38ef5a1e9c941aabb2155768670b92a',\n",
       "  '7e25a2c8ea1f41c5b0da1e69ecfa71a2',\n",
       "  'ddc03471df3e4c9bb9663629a4097743',\n",
       "  '31e9939f05c1485b88a8f68ad2cf9fa4',\n",
       "  '783683d957054175bda1b326453a13f4',\n",
       "  '343d984344e440c7952d1e403b572b2a',\n",
       "  '92af2609d31445e5a71b2d895376fed6',\n",
       "  '47620afea3c443f6a761e885273cb531',\n",
       "  'd31dc715d1c34b99bd5afb0e3aea26ed',\n",
       "  '34d0574ea8f340179c82162c6ac069bc',\n",
       "  'd7fd2bb9696d43af901326664e42340b',\n",
       "  'b5622d4dcb0d4549b813b3ffb96fbdc9',\n",
       "  'da04ae0b72024818a6219d8dd138ea4b',\n",
       "  '6b6513e6c8384cec88775cae30b78c0e',\n",
       "  'eda311bda86f4e54857b0554639d6426',\n",
       "  'cfe71bf0b5c54aed8f56d4feca9a7f59',\n",
       "  'ee155e99938a4c2698fed50fc5b5d16a',\n",
       "  '700b800c787842ba83493d9b2775234a'],\n",
       " 'mask': <nuscenes.utils.map_mask.MapMask at 0x7917c7759cc0>}"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nusc.map[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e0c7164e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:06.013963Z",
     "iopub.status.busy": "2024-12-03T20:19:06.013601Z",
     "iopub.status.idle": "2024-12-03T20:19:06.019652Z",
     "shell.execute_reply": "2024-12-03T20:19:06.018837Z"
    },
    "papermill": {
     "duration": 0.067022,
     "end_time": "2024-12-03T20:19:06.021326",
     "exception": false,
     "start_time": "2024-12-03T20:19:05.954304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'category': 'semantic_prior',\n",
       " 'token': '37819e65e09e5547b8a3ceaefba56bb2',\n",
       " 'filename': 'maps/37819e65e09e5547b8a3ceaefba56bb2.png',\n",
       " 'log_tokens': ['853a9f9fe7e84bb8b24bff8ebf23f287',\n",
       "  'e55205b1f2894b49957905d7ddfdb96d',\n",
       "  '8fefc430cbfa4c2191978c0df302eb98',\n",
       "  'f93e8d66ce4b4fbea7062d19b1fe29fb',\n",
       "  '89a56a5dc3aa4e56a2e57b52de738da5'],\n",
       " 'mask': <nuscenes.utils.map_mask.MapMask at 0x7918fc3a3a60>}"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nusc.map[3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "2e3ec263",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:06.139996Z",
     "iopub.status.busy": "2024-12-03T20:19:06.139641Z",
     "iopub.status.idle": "2024-12-03T20:19:06.145175Z",
     "shell.execute_reply": "2024-12-03T20:19:06.144338Z"
    },
    "papermill": {
     "duration": 0.066178,
     "end_time": "2024-12-03T20:19:06.146829",
     "exception": false,
     "start_time": "2024-12-03T20:19:06.080651",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'token': '0a30519ee16a4619b4f4acfe2d78fb55',\n",
       " 'name': 'static_object.bicycle_rack',\n",
       " 'description': 'Area or device intended to park or secure the bicycles in a row. It includes all the bikes parked in it and any empty slots that are intended for parking bikes.'}"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(nusc.category)\n",
    "nusc.category[22]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1b06ca62",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:06.263581Z",
     "iopub.status.busy": "2024-12-03T20:19:06.263223Z",
     "iopub.status.idle": "2024-12-03T20:19:06.269147Z",
     "shell.execute_reply": "2024-12-03T20:19:06.268318Z"
    },
    "papermill": {
     "duration": 0.065817,
     "end_time": "2024-12-03T20:19:06.270712",
     "exception": false,
     "start_time": "2024-12-03T20:19:06.204895",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'token': '70aecbe9b64f4722ab3c230391a3beb8',\n",
       " 'sample_token': 'cd21dbfc3bd749c7b10a5c42562e0c42',\n",
       " 'instance_token': '6dd2cbf4c24b4caeb625035869bca7b5',\n",
       " 'visibility_token': '4',\n",
       " 'attribute_tokens': ['4d8821270b4a47e3a8a300cbec48188e'],\n",
       " 'translation': [373.214, 1130.48, 1.25],\n",
       " 'size': [0.621, 0.669, 1.642],\n",
       " 'rotation': [0.9831098797903927, 0.0, 0.0, -0.18301629506281616],\n",
       " 'prev': 'a1721876c0944cdd92ebc3c75d55d693',\n",
       " 'next': '1e8e35d365a441a18dd5503a0ee1c208',\n",
       " 'num_lidar_pts': 5,\n",
       " 'num_radar_pts': 0,\n",
       " 'category_name': 'human.pedestrian.adult'}"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nusc.sample_annotation[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "7d9af065",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:06.387575Z",
     "iopub.status.busy": "2024-12-03T20:19:06.386725Z",
     "iopub.status.idle": "2024-12-03T20:19:06.876011Z",
     "shell.execute_reply": "2024-12-03T20:19:06.875059Z"
    },
    "papermill": {
     "duration": 0.549746,
     "end_time": "2024-12-03T20:19:06.877876",
     "exception": false,
     "start_time": "2024-12-03T20:19:06.328130",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "======\n",
      "Loading NuScenes tables for version v1.0-mini...\n",
      "23 category,\n",
      "8 attribute,\n",
      "4 visibility,\n",
      "911 instance,\n",
      "12 sensor,\n",
      "120 calibrated_sensor,\n",
      "31206 ego_pose,\n",
      "8 log,\n",
      "10 scene,\n",
      "404 sample,\n",
      "31206 sample_data,\n",
      "18538 sample_annotation,\n",
      "4 map,\n",
      "Done loading in 0.367 seconds.\n",
      "======\n",
      "Reverse indexing ...\n",
      "Done reverse indexing in 0.1 seconds.\n",
      "======\n",
      "[[ 3.73679825e+02  3.73456358e+02  3.73456358e+02  3.73679825e+02\n",
      "   3.73055642e+02  3.72832175e+02  3.72832175e+02  3.73055642e+02]\n",
      " [ 1.13058833e+03  1.13000893e+03  1.13000893e+03  1.13058833e+03\n",
      "   1.13082907e+03  1.13024967e+03  1.13024967e+03  1.13082907e+03]\n",
      " [ 1.62100000e+00  1.62100000e+00 -2.10000000e-02 -2.10000000e-02\n",
      "   1.62100000e+00  1.62100000e+00 -2.10000000e-02 -2.10000000e-02]]\n"
     ]
    }
   ],
   "source": [
    "from nuscenes.nuscenes import NuScenes\n",
    "from nuscenes.utils.data_classes import Box\n",
    "from pyquaternion import Quaternion\n",
    "import numpy as np\n",
    "\n",
    "def extract_bounding_boxes(nusc, sample_annotation_token):\n",
    "    # Retrieve the annotation record\n",
    "    annotation = nusc.get('sample_annotation', sample_annotation_token)\n",
    "    \n",
    "    # Extract the bounding box\n",
    "    box = Box(annotation['translation'], annotation['size'], Quaternion(annotation['rotation']),\n",
    "              name=annotation['category_name'], token=annotation['token'])\n",
    "    \n",
    "    # Convert the bounding box to its corner coordinates\n",
    "    corners = box.corners()\n",
    "    \n",
    "    return corners\n",
    "\n",
    "# Initialize NuScenes\n",
    "nusc = NuScenes(version='v1.0-mini', dataroot='/data/sets/nuscenes', verbose=True)\n",
    "\n",
    "# Example annotation token\n",
    "sample_annotation_token = \"ef63a697930c4b20a6b9791f423351da\"\n",
    "\n",
    "# Extract bounding boxes coordinates\n",
    "bounding_box_corners = extract_bounding_boxes(nusc, sample_annotation_token)\n",
    "\n",
    "print(bounding_box_corners)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "8a8680b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:06.993990Z",
     "iopub.status.busy": "2024-12-03T20:19:06.993641Z",
     "iopub.status.idle": "2024-12-03T20:19:07.954218Z",
     "shell.execute_reply": "2024-12-03T20:19:07.953365Z"
    },
    "papermill": {
     "duration": 1.020793,
     "end_time": "2024-12-03T20:19:07.956137",
     "exception": false,
     "start_time": "2024-12-03T20:19:06.935344",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "======\n",
      "Loading NuScenes tables for version v1.0-mini...\n",
      "23 category,\n",
      "8 attribute,\n",
      "4 visibility,\n",
      "911 instance,\n",
      "12 sensor,\n",
      "120 calibrated_sensor,\n",
      "31206 ego_pose,\n",
      "8 log,\n",
      "10 scene,\n",
      "404 sample,\n",
      "31206 sample_data,\n",
      "18538 sample_annotation,\n",
      "4 map,\n",
      "Done loading in 0.846 seconds.\n",
      "======\n",
      "Reverse indexing ...\n",
      "Done reverse indexing in 0.1 seconds.\n",
      "======\n",
      "[[ 3.73679825e+02  3.73456358e+02  3.73456358e+02  3.73679825e+02\n",
      "   3.73055642e+02  3.72832175e+02  3.72832175e+02  3.73055642e+02]\n",
      " [ 1.13058833e+03  1.13000893e+03  1.13000893e+03  1.13058833e+03\n",
      "   1.13082907e+03  1.13024967e+03  1.13024967e+03  1.13082907e+03]\n",
      " [ 1.62100000e+00  1.62100000e+00 -2.10000000e-02 -2.10000000e-02\n",
      "   1.62100000e+00  1.62100000e+00 -2.10000000e-02 -2.10000000e-02]]\n"
     ]
    }
   ],
   "source": [
    "from nuscenes.nuscenes import NuScenes\n",
    "from nuscenes.utils.data_classes import Box\n",
    "from pyquaternion import Quaternion\n",
    "import numpy as np\n",
    "\n",
    "def extract_bounding_boxes(nusc, sample_annotation_token):\n",
    "    # Retrieve the annotation record\n",
    "    annotation = nusc.get('sample_annotation', sample_annotation_token)\n",
    "    \n",
    "    # Extract the bounding box\n",
    "    box = Box(annotation['translation'], annotation['size'], Quaternion(annotation['rotation']),\n",
    "              name=annotation['category_name'], token=annotation['token'])\n",
    "    \n",
    "    # Convert the bounding box to its corner coordinates\n",
    "    corners = box.corners()\n",
    "    \n",
    "    return corners\n",
    "\n",
    "# Initialize NuScenes\n",
    "nusc = NuScenes(version='v1.0-mini', dataroot='/data/sets/nuscenes', verbose=True)\n",
    "\n",
    "# Example annotation token\n",
    "sample_annotation_token = \"ef63a697930c4b20a6b9791f423351da\"\n",
    "\n",
    "# Extract bounding boxes coordinates\n",
    "bounding_box_corners = extract_bounding_boxes(nusc, sample_annotation_token)\n",
    "\n",
    "print(bounding_box_corners)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d2924c0a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:08.073165Z",
     "iopub.status.busy": "2024-12-03T20:19:08.072847Z",
     "iopub.status.idle": "2024-12-03T20:19:09.468539Z",
     "shell.execute_reply": "2024-12-03T20:19:09.467545Z"
    },
    "papermill": {
     "duration": 1.455649,
     "end_time": "2024-12-03T20:19:09.470206",
     "exception": false,
     "start_time": "2024-12-03T20:19:08.014557",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "======\n",
      "Loading NuScenes tables for version v1.0-mini...\n",
      "23 category,\n",
      "8 attribute,\n",
      "4 visibility,\n",
      "911 instance,\n",
      "12 sensor,\n",
      "120 calibrated_sensor,\n",
      "31206 ego_pose,\n",
      "8 log,\n",
      "10 scene,\n",
      "404 sample,\n",
      "31206 sample_data,\n",
      "18538 sample_annotation,\n",
      "4 map,\n",
      "Done loading in 0.766 seconds.\n",
      "======\n",
      "Reverse indexing ...\n",
      "Done reverse indexing in 0.1 seconds.\n",
      "======\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 900x1600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from nuscenes.nuscenes import NuScenes\n",
    "from nuscenes.utils.data_classes import Box\n",
    "from nuscenes.utils.geometry_utils import view_points\n",
    "from pyquaternion import Quaternion\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "%matplotlib inline\n",
    "# Initialize NuScenes\n",
    "nusc = NuScenes(version='v1.0-mini', dataroot='/data/sets/nuscenes', verbose=True)\n",
    "\n",
    "# Sample token for the keyframe\n",
    "sample_token = \"ca9a282c9e77460f8360f564131a8af5\"\n",
    "\n",
    "# Get sample data\n",
    "sample = nusc.get('sample', sample_token)\n",
    "camera_token = sample['data']['CAM_FRONT']\n",
    "cam_data = nusc.get('sample_data', camera_token)\n",
    "cam_path = nusc.get_sample_data_path(camera_token)\n",
    "image = plt.imread(cam_path)\n",
    "\n",
    "# Load the annotations\n",
    "anns = [nusc.get('sample_annotation', token) for token in sample['anns']]\n",
    "\n",
    "# Plot the image\n",
    "fig, ax = plt.subplots(1, 1, figsize=(9, 16))\n",
    "ax.imshow(image)\n",
    "\n",
    "# Plot the bounding boxes\n",
    "for ann in anns:\n",
    "    box = Box(ann['translation'], ann['size'], Quaternion(ann['rotation']))\n",
    "    corners = view_points(box.corners(), view=np.eye(3), normalize=True)[:2, :]\n",
    "    ax.plot([corners[0, 0], corners[0, 1]], [corners[1, 0], corners[1, 1]], color='red')\n",
    "    ax.plot([corners[0, 1], corners[0, 2]], [corners[1, 1], corners[1, 2]], color='red')\n",
    "    ax.plot([corners[0, 2], corners[0, 3]], [corners[1, 2], corners[1, 3]], color='red')\n",
    "    ax.plot([corners[0, 3], corners[0, 0]], [corners[1, 3], corners[1, 0]], color='red')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "34675da5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-03T20:19:09.590004Z",
     "iopub.status.busy": "2024-12-03T20:19:09.589418Z",
     "iopub.status.idle": "2024-12-03T20:19:09.595653Z",
     "shell.execute_reply": "2024-12-03T20:19:09.594963Z"
    },
    "papermill": {
     "duration": 0.068196,
     "end_time": "2024-12-03T20:19:09.597303",
     "exception": false,
     "start_time": "2024-12-03T20:19:09.529107",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'token': 'ef63a697930c4b20a6b9791f423351da',\n",
       "  'sample_token': 'ca9a282c9e77460f8360f564131a8af5',\n",
       "  'instance_token': '6dd2cbf4c24b4caeb625035869bca7b5',\n",
       "  'visibility_token': '1',\n",
       "  'attribute_tokens': ['4d8821270b4a47e3a8a300cbec48188e'],\n",
       "  'translation': [373.256, 1130.419, 0.8],\n",
       "  'size': [0.621, 0.669, 1.642],\n",
       "  'rotation': [0.9831098797903927, 0.0, 0.0, -0.18301629506281616],\n",
       "  'prev': '',\n",
       "  'next': '7987617983634b119e383d8a29607fd7',\n",
       "  'num_lidar_pts': 1,\n",
       "  'num_radar_pts': 0,\n",
       "  'category_name': 'human.pedestrian.adult'},\n",
       " {'token': '6b89da9bf1f84fd6a5fbe1c3b236f809',\n",
       "  'sample_token': 'ca9a282c9e77460f8360f564131a8af5',\n",
       "  'instance_token': '48d58b69b40149aeb2e64aa4b1a9192f',\n",
       "  'visibility_token': '2',\n",
       "  'attribute_tokens': ['ab83627ff28b465b85c427162dec722f'],\n",
       "  'translation': [378.888, 1153.348, 0.865],\n",
       "  'size': [0.775, 0.769, 1.711],\n",
       "  'rotation': [-0.5527590208259255, 0.0, 0.0, 0.8333411455673865],\n",
       "  'prev': '',\n",
       "  'next': '216bbbd8e01c450a8fabe9d47433c10a',\n",
       "  'num_lidar_pts': 2,\n",
       "  'num_radar_pts': 0,\n",
       "  'category_name': 'human.pedestrian.adult'},\n",
       " {'token': '924ee6ac1fed440a9d9e3720aac635a0',\n",
       "  'sample_token': 'ca9a282c9e77460f8360f564131a8af5',\n",
       "  'instance_token': 'bd26c2cdb22d4bb1834e808c89128898',\n",
       "  'visibility_token': '3',\n",
       "  'attribute_tokens': ['c3246a1e22a14fcb878aa61e69ae3329'],\n",
       "  'translation': [353.794, 1132.355, 0.602],\n",
       "  'size': [2.011, 4.633, 1.573],\n",
       "  'rotation': [0.9797276292877292, 0.0, 0.0, -0.20033415188191459],\n",
       "  'prev': '',\n",
       "  'next': 'f0cbd9dbafd74e20bcf6dd0357c97f59',\n",
       "  'num_lidar_pts': 5,\n",
       "  'num_radar_pts': 0,\n",
       "  'category_name': 'vehicle.car'}]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "anns[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58e8eb74",
   "metadata": {
    "papermill": {
     "duration": 0.057068,
     "end_time": "2024-12-03T20:19:09.711610",
     "exception": false,
     "start_time": "2024-12-03T20:19:09.654542",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [],
   "dockerImageVersionId": 30805,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 434.814234,
   "end_time": "2024-12-03T20:19:12.842709",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-12-03T20:11:58.028475",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0093777c5ed84acfa6bc41eb50a1d034": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8272644b6c1f432298a9c665ee4d12ee",
       "placeholder": "​",
       "style": "IPY_MODEL_2b4faf9ad95e4f1a880f177a09fb7f90",
       "tabbable": null,
       "tooltip": null,
       "value": "preprocessor_config.json: 100%"
      }
     },
     "089a9840d257483c834ec3ad732e09bb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0a3395e54a0641b18b1b13cd292389ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_65fee6a5a9864a69bbd940cfe8666cb3",
       "placeholder": "​",
       "style": "IPY_MODEL_363edd4c4266482ba0e6926b662f1ffa",
       "tabbable": null,
       "tooltip": null,
       "value": "vocab.json: 100%"
      }
     },
     "0e0f31989268482ebc89bad799ff72b8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "0f2c26850ecc409fbfd2a03dcd439a5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_60f90bd7b883409794c6add878d55547",
       "placeholder": "​",
       "style": "IPY_MODEL_64c4c628b84d4fb49832e4b74ab01db4",
       "tabbable": null,
       "tooltip": null,
       "value": " 806/806 [00:00&lt;00:00, 105kB/s]"
      }
     },
     "0fc9e6bdc1af4969a0114c8286b3d8f8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "10d3e801779c4afdbbc806a59d28afce": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1297087356834413b08dcc77f77ec1cf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "15112ffdf7464cd0879d28d613da9921": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "16e1dc0826664352becb6cbda4e6fda6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "1894739e63554ad3951a801f0c939de8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "1c82a5cd540040e69c0adc30f1817619": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1de6b2bc78634acda301f9b7975dbfa4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "20e8d8bca9484f55a6eb9362b3c6cfb7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "21609a5e278e467cb5933eb348f7f1d6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "220f295b2dc64cf7b269a8bed593e087": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2380f9e656ec4672bc1265e5eb6e368b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e9cd43004219447098db01dcdc276faa",
       "placeholder": "​",
       "style": "IPY_MODEL_6e4851bd09464e979100242c14b83362",
       "tabbable": null,
       "tooltip": null,
       "value": " 48.7k/48.7k [00:00&lt;00:00, 5.54MB/s]"
      }
     },
     "24e1bfa79c3241a9ae8ea04f703eab1d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2a746d5d52c449558453f97bbd42a6a2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2b4faf9ad95e4f1a880f177a09fb7f90": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2dfce1d735d84162b58f3de89ea6d9b3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9900752b3bd4467ba4d951ea7d3e87f6",
       "placeholder": "​",
       "style": "IPY_MODEL_0e0f31989268482ebc89bad799ff72b8",
       "tabbable": null,
       "tooltip": null,
       "value": " 1.36M/1.36M [00:00&lt;00:00, 6.70MB/s]"
      }
     },
     "2edf768c67c5430e932505ebb075d43f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "30e9acd9567c4c02b4c114e75dae8813": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c26d893c5d624440b430383d3eaf7f74",
        "IPY_MODEL_f0bdf89adfcc4d809cf56a923c399d55",
        "IPY_MODEL_514c387caf374e01ba3c17944c76fbb8"
       ],
       "layout": "IPY_MODEL_ea8f662daa53427f9aa0324e036efade",
       "tabbable": null,
       "tooltip": null
      }
     },
     "31241275dda440aa9c33eff859b1dbce": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3209f8c49a8d4e09874cfa91cd923eac": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1297087356834413b08dcc77f77ec1cf",
       "placeholder": "​",
       "style": "IPY_MODEL_0fc9e6bdc1af4969a0114c8286b3d8f8",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer.json: 100%"
      }
     },
     "3558dad6e3cb483bb0877e70ff572a5c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "363edd4c4266482ba0e6926b662f1ffa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3751fd8b4a2f4ccd9211d2c73b33a28e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3b442327df0144d08fdf70ec32e2e369": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f7c8168c00f3495c8db7cdab21da8565",
        "IPY_MODEL_ee3a9dd4d43044738a24671d04be458a",
        "IPY_MODEL_611ee92915c244a58880107910724e88"
       ],
       "layout": "IPY_MODEL_3558dad6e3cb483bb0877e70ff572a5c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3ec148ca73c9483e97828bc5025814ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "4576f7d798ef4e94b9ed555fdbe0ff32": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "514c387caf374e01ba3c17944c76fbb8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c71b19eea7804b3d928827295b976ac8",
       "placeholder": "​",
       "style": "IPY_MODEL_21609a5e278e467cb5933eb348f7f1d6",
       "tabbable": null,
       "tooltip": null,
       "value": " 2.44k/2.44k [00:00&lt;00:00, 268kB/s]"
      }
     },
     "532ab5f1aeed4317a2c58adbf6a579d6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "561f4ea47e324e72a643b6d079371834": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "591b7941215449338bf292c77937c99e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5e6ac78c41754e0b9928de54959c5e40": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f3eedca1f27c4bd286729d90a133dfbe",
        "IPY_MODEL_921f73715cd94b7285adb00a8bfcd41d",
        "IPY_MODEL_b94a0df33e9343199db1c32cea45b0b5"
       ],
       "layout": "IPY_MODEL_837f188ef0414d918159db55c39ba165",
       "tabbable": null,
       "tooltip": null
      }
     },
     "60f90bd7b883409794c6add878d55547": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "611ee92915c244a58880107910724e88": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9c2d0fda71bc4fd6a86b1662da9812d5",
       "placeholder": "​",
       "style": "IPY_MODEL_f5c4481415fe47a48831c7d5d91a3e8d",
       "tabbable": null,
       "tooltip": null,
       "value": " 1.54G/1.54G [00:36&lt;00:00, 42.5MB/s]"
      }
     },
     "6320bcf2c9954e8f9e4f6ced48b2127e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6f4b6f6ac0d54c229b1910ae3dbb18be",
       "max": 1355863.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_591b7941215449338bf292c77937c99e",
       "tabbable": null,
       "tooltip": null,
       "value": 1355863.0
      }
     },
     "632a76ee3cc341b4a2500729f31f7b82": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8b3ead60dc7f439a8c805e2daeff7efe",
       "max": 15125.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f64dbab4514a42cc84405a9b261cefc2",
       "tabbable": null,
       "tooltip": null,
       "value": 15125.0
      }
     },
     "64c4c628b84d4fb49832e4b74ab01db4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "65fee6a5a9864a69bbd940cfe8666cb3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6e4851bd09464e979100242c14b83362": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6f4b6f6ac0d54c229b1910ae3dbb18be": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7a63fb37d5e74b03991d198b7bb86a9c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b3ca03dc2ac844d68ec3ee562d178e43",
       "max": 34.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_9c61378c234a49f9a8050995584aa22d",
       "tabbable": null,
       "tooltip": null,
       "value": 34.0
      }
     },
     "7c9270d137184555a5717fe504c77b0c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_aa210b71e3494f75b413efbebae4eb2f",
        "IPY_MODEL_632a76ee3cc341b4a2500729f31f7b82",
        "IPY_MODEL_c93388c966274addb4af2f43140c49c2"
       ],
       "layout": "IPY_MODEL_e2141d01cdd142ca96aafbd6add3b56d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "80e7694a99f2485ea7f3b5b871ead313": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_cd3097f447e34dfa8915a70e0cb27f65",
        "IPY_MODEL_7a63fb37d5e74b03991d198b7bb86a9c",
        "IPY_MODEL_a96cdf4e74b74a6183660002713c49ef"
       ],
       "layout": "IPY_MODEL_fd543d7f8bc94cd0a51743ed74e841f1",
       "tabbable": null,
       "tooltip": null
      }
     },
     "81ef90cd21764e5daac335be4b55cd92": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8272644b6c1f432298a9c665ee4d12ee": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "837f188ef0414d918159db55c39ba165": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "88e15bca104742b7bea5db3d6003fd10": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8b3ead60dc7f439a8c805e2daeff7efe": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8b6e483c3f5d42deb999c55c3eeb8f46": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8c70cf84bbd741b28b2a87818bec86e6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8d2e6b8bb4084e0f85f1581c279bb73e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "921f73715cd94b7285adb00a8bfcd41d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f834b6c293ff49d68558fb829f3c39e9",
       "max": 51.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_1894739e63554ad3951a801f0c939de8",
       "tabbable": null,
       "tooltip": null,
       "value": 51.0
      }
     },
     "92266260c3ff41a6a3b345d29da7652e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "98ed32f1b6464e51880e9b7ae939dfc1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9900752b3bd4467ba4d951ea7d3e87f6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9c2d0fda71bc4fd6a86b1662da9812d5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9c61378c234a49f9a8050995584aa22d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a138696fbd104f8ca59e98271bab1a91": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a161e22812d64604bb4b9463ba884ad2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a66a780f1b41406ea158af420bce92d8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a78ad883d03540c2a54acdb1a20337ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e6d6c9a69684485b90f9ea984362c61a",
        "IPY_MODEL_e5d3a60994d24bec869f034a9fefaf16",
        "IPY_MODEL_e2add48e15e643958b6ee6581e4a68b4"
       ],
       "layout": "IPY_MODEL_a66a780f1b41406ea158af420bce92d8",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a96cdf4e74b74a6183660002713c49ef": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_da9ab19162b9424dbbbb25d31572607a",
       "placeholder": "​",
       "style": "IPY_MODEL_d8f9b74af8ba4741baeaf861f5e3e1cd",
       "tabbable": null,
       "tooltip": null,
       "value": " 34.0/34.0 [00:00&lt;00:00, 4.08kB/s]"
      }
     },
     "aa210b71e3494f75b413efbebae4eb2f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c636edc27e224632828a7dadafd0631d",
       "placeholder": "​",
       "style": "IPY_MODEL_f62e853cc96a4935894b123bd6aaccc7",
       "tabbable": null,
       "tooltip": null,
       "value": "configuration_florence2.py: 100%"
      }
     },
     "ab762c876b5a41e784255bce1a74d251": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_0093777c5ed84acfa6bc41eb50a1d034",
        "IPY_MODEL_c7456a5fb8a84924bef3b05056a5e2f6",
        "IPY_MODEL_0f2c26850ecc409fbfd2a03dcd439a5f"
       ],
       "layout": "IPY_MODEL_561f4ea47e324e72a643b6d079371834",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b2869aff492949ef82250799418fb89a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3209f8c49a8d4e09874cfa91cd923eac",
        "IPY_MODEL_6320bcf2c9954e8f9e4f6ced48b2127e",
        "IPY_MODEL_2dfce1d735d84162b58f3de89ea6d9b3"
       ],
       "layout": "IPY_MODEL_2a746d5d52c449558453f97bbd42a6a2",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b37a77d457734e8b9ba6846ba0a3c542": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e4281eb6cf114b48b2c217bd25dad90f",
        "IPY_MODEL_f3c569ae9aaa402b83315dd09a800382",
        "IPY_MODEL_2380f9e656ec4672bc1265e5eb6e368b"
       ],
       "layout": "IPY_MODEL_532ab5f1aeed4317a2c58adbf6a579d6",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b3ca03dc2ac844d68ec3ee562d178e43": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b54526fba95441bab8f7c7c6bb656eee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b81304a1b4394e2ab5d06b6567012041": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2edf768c67c5430e932505ebb075d43f",
       "placeholder": "​",
       "style": "IPY_MODEL_e5bc93c006774d94995bcf5f15fec0c9",
       "tabbable": null,
       "tooltip": null,
       "value": " 1.10M/1.10M [00:00&lt;00:00, 2.77MB/s]"
      }
     },
     "b94a0df33e9343199db1c32cea45b0b5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_eb5bbab5a544448aa7be3d5e16b67ade",
       "placeholder": "​",
       "style": "IPY_MODEL_a161e22812d64604bb4b9463ba884ad2",
       "tabbable": null,
       "tooltip": null,
       "value": " 51.0/51.0 [00:00&lt;00:00, 4.88kB/s]"
      }
     },
     "bbb7c750ca2846bcafeca9184f76de3d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c26d893c5d624440b430383d3eaf7f74": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_220f295b2dc64cf7b269a8bed593e087",
       "placeholder": "​",
       "style": "IPY_MODEL_f3b4738745e24acab749588d2a363bf0",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "c34a454e974243e29c6cc6d149409090": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c636edc27e224632828a7dadafd0631d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c643adf2e34043ea824f0213ccbeea2b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_88e15bca104742b7bea5db3d6003fd10",
       "max": 1099884.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_16e1dc0826664352becb6cbda4e6fda6",
       "tabbable": null,
       "tooltip": null,
       "value": 1099884.0
      }
     },
     "c71b19eea7804b3d928827295b976ac8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c7456a5fb8a84924bef3b05056a5e2f6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bbb7c750ca2846bcafeca9184f76de3d",
       "max": 806.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8d2e6b8bb4084e0f85f1581c279bb73e",
       "tabbable": null,
       "tooltip": null,
       "value": 806.0
      }
     },
     "c93388c966274addb4af2f43140c49c2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_089a9840d257483c834ec3ad732e09bb",
       "placeholder": "​",
       "style": "IPY_MODEL_81ef90cd21764e5daac335be4b55cd92",
       "tabbable": null,
       "tooltip": null,
       "value": " 15.1k/15.1k [00:00&lt;00:00, 1.83MB/s]"
      }
     },
     "cd3097f447e34dfa8915a70e0cb27f65": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_24e1bfa79c3241a9ae8ea04f703eab1d",
       "placeholder": "​",
       "style": "IPY_MODEL_31241275dda440aa9c33eff859b1dbce",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: 100%"
      }
     },
     "d021e0fed1ef45fbaf19f6ff8d89aa01": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d8f9b74af8ba4741baeaf861f5e3e1cd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "da9ab19162b9424dbbbb25d31572607a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e1f5fac6d97c41a8b5b628be7de04429": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_0a3395e54a0641b18b1b13cd292389ae",
        "IPY_MODEL_c643adf2e34043ea824f0213ccbeea2b",
        "IPY_MODEL_b81304a1b4394e2ab5d06b6567012041"
       ],
       "layout": "IPY_MODEL_1de6b2bc78634acda301f9b7975dbfa4",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e2141d01cdd142ca96aafbd6add3b56d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e2add48e15e643958b6ee6581e4a68b4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_10d3e801779c4afdbbc806a59d28afce",
       "placeholder": "​",
       "style": "IPY_MODEL_c34a454e974243e29c6cc6d149409090",
       "tabbable": null,
       "tooltip": null,
       "value": " 127k/127k [00:00&lt;00:00, 12.6MB/s]"
      }
     },
     "e4281eb6cf114b48b2c217bd25dad90f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f2e3ee063f454f7aa5a71dcfa157472a",
       "placeholder": "​",
       "style": "IPY_MODEL_20e8d8bca9484f55a6eb9362b3c6cfb7",
       "tabbable": null,
       "tooltip": null,
       "value": "processing_florence2.py: 100%"
      }
     },
     "e5bc93c006774d94995bcf5f15fec0c9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e5d3a60994d24bec869f034a9fefaf16": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8b6e483c3f5d42deb999c55c3eeb8f46",
       "max": 127294.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b54526fba95441bab8f7c7c6bb656eee",
       "tabbable": null,
       "tooltip": null,
       "value": 127294.0
      }
     },
     "e6d6c9a69684485b90f9ea984362c61a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_92266260c3ff41a6a3b345d29da7652e",
       "placeholder": "​",
       "style": "IPY_MODEL_3ec148ca73c9483e97828bc5025814ae",
       "tabbable": null,
       "tooltip": null,
       "value": "modeling_florence2.py: 100%"
      }
     },
     "e9cd43004219447098db01dcdc276faa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ea8f662daa53427f9aa0324e036efade": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "eadb4199c9694dd79ca44e621352ec67": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "eb5bbab5a544448aa7be3d5e16b67ade": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ee3a9dd4d43044738a24671d04be458a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4576f7d798ef4e94b9ed555fdbe0ff32",
       "max": 1543107459.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_15112ffdf7464cd0879d28d613da9921",
       "tabbable": null,
       "tooltip": null,
       "value": 1543107459.0
      }
     },
     "f0bdf89adfcc4d809cf56a923c399d55": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3751fd8b4a2f4ccd9211d2c73b33a28e",
       "max": 2445.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d021e0fed1ef45fbaf19f6ff8d89aa01",
       "tabbable": null,
       "tooltip": null,
       "value": 2445.0
      }
     },
     "f2e3ee063f454f7aa5a71dcfa157472a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f3b4738745e24acab749588d2a363bf0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f3c569ae9aaa402b83315dd09a800382": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8c70cf84bbd741b28b2a87818bec86e6",
       "max": 48674.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_eadb4199c9694dd79ca44e621352ec67",
       "tabbable": null,
       "tooltip": null,
       "value": 48674.0
      }
     },
     "f3eedca1f27c4bd286729d90a133dfbe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1c82a5cd540040e69c0adc30f1817619",
       "placeholder": "​",
       "style": "IPY_MODEL_98ed32f1b6464e51880e9b7ae939dfc1",
       "tabbable": null,
       "tooltip": null,
       "value": "generation_config.json: 100%"
      }
     },
     "f5c4481415fe47a48831c7d5d91a3e8d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f62e853cc96a4935894b123bd6aaccc7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f64dbab4514a42cc84405a9b261cefc2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f7c8168c00f3495c8db7cdab21da8565": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f8c28bc9638f480198eb7ecf8d8823a3",
       "placeholder": "​",
       "style": "IPY_MODEL_a138696fbd104f8ca59e98271bab1a91",
       "tabbable": null,
       "tooltip": null,
       "value": "pytorch_model.bin: 100%"
      }
     },
     "f834b6c293ff49d68558fb829f3c39e9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f8c28bc9638f480198eb7ecf8d8823a3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fd543d7f8bc94cd0a51743ed74e841f1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
